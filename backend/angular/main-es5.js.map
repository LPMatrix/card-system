{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/add-agent/add-agent.component.ts","webpack:///src/app/admin/add-agent/add-agent.component.html","webpack:///src/app/admin/add-agent/mimetype-validator.ts","webpack:///src/app/admin/admin-profile/admin-profile.component.ts","webpack:///src/app/admin/admin-profile/admin-profile.component.html","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/admin/admin.service.ts","webpack:///src/app/admin/dashboard-page/dashboard-page.component.ts","webpack:///src/app/admin/dashboard-page/dashboard-page.component.html","webpack:///src/app/admin/view/view.component.ts","webpack:///src/app/admin/view/view.component.html","webpack:///src/app/agent/agent-dashboard/agent-dashboard.component.ts","webpack:///src/app/agent/agent-dashboard/agent-dashboard.component.html","webpack:///src/app/agent/agent-profile/agent-profile.component.ts","webpack:///src/app/agent/agent-profile/agent-profile.component.html","webpack:///src/app/agent/agent.component.ts","webpack:///src/app/agent/agent.component.html","webpack:///src/app/agent/agent.service.ts","webpack:///src/app/agent/capture/capture.component.ts","webpack:///src/app/agent/capture/capture.component.html","webpack:///src/app/agent/capture/state-file.ts","webpack:///src/app/angular-material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/admin.auth.guard.ts","webpack:///src/app/auth/admin.auth.service.ts","webpack:///src/app/auth/admin/login/login.component.ts","webpack:///src/app/auth/admin/login/login.component.html","webpack:///src/app/auth/agent/agent-forgot-password/agent-forgot-password.component.ts","webpack:///src/app/auth/agent/agent-forgot-password/agent-forgot-password.component.html","webpack:///src/app/auth/agent/agent-reset-password/agent-reset-password.component.ts","webpack:///src/app/auth/agent/agent-reset-password/agent-reset-password.component.html","webpack:///src/app/auth/agent/login/login.component.ts","webpack:///src/app/auth/agent/login/login.component.html","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/login/forgot-password/forgot-password.component.ts","webpack:///src/app/auth/login/forgot-password/forgot-password.component.html","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/login/reset-password/reset-password.component.ts","webpack:///src/app/auth/login/reset-password/reset-password.component.html","webpack:///src/app/auth/user.auth.guard.ts","webpack:///src/app/auth/user.auth.service.ts","webpack:///src/app/card-back/card-back.component.ts","webpack:///src/app/card-back/card-back.component.html","webpack:///src/app/card/card.component.ts","webpack:///src/app/card/card.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/error-interceptor.service.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/shared/loading-spinner/loading-spinner.component.ts","webpack:///src/app/shared/loading-spinner/loading-spinner.component.html","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddAgentComponent","adminService","adminAuthService","init","adminForm","name","required","email","password","minLength","image","event","file","target","files","patchValue","get","updateValueAndValidity","reader","FileReader","onload","imagePreview","result","readAsDataURL","valid","createAgent","value","logout","onSubmit","onImagePicked","selector","templateUrl","styleUrls","mimeType","control","fileReader","frObs","create","observer","addEventListener","arr","Uint8Array","subarray","header","isValid","i","length","toString","next","invalidMimeType","complete","readAsArrayBuffer","AdminProfileComponent","loading","newpassword","confirmpassword","message","changeProfile","subscribe","responseData","setValue","error","AdminComponent","formBuilder","router","title","credentialsForm","group","navigateByUrl","console","log","register","BACKEND_URL","apiUrl","AdminService","http","agents","agentStatusListener","users","userStatusListener","asObservable","agent","postCredentials","FormData","append","post","push","userId","postData","approval","getUsers","userFiltered","findIndex","p","_id","user","agentId","agentFilter","getAgents","getFilteredAgent","filter","providedIn","DashboardPageComponent","displayedColumns","counts","userCount","agentCount","arrayCount","geAgentUsers","usersSubscription","getUserStatusListener","dataSource","agentsSubscription","getAgentStatusListener","approve","unsubscribe","agentAccountStatus","deleteAgent","paginator","sort","filterValue","trim","toLowerCase","applyFilter","ViewComponent","AgentDashboardComponent","agentService","authService","userSubscription","getAgentDataStatus","userInformation","AgentProfileComponent","getProfile","agentForm","disabled","agentData","AgentComponent","AgentService","stateRecord","states","CaptureComponent","showWebcam","allowCameraSwitch","multipleWebcamsAvailable","videoOptions","errors","webcamImage","trigger","nextWebcam","toggleWebcam","directionOrDeviceId","deviceId","getAvailableVideoInputs","mediaDevices","firstname","middlename","lastname","gender","dob","zone","unit","phone_no","pattern","state","vehicle_no","fingerprint_thumb","fingerprint_index","imageAsDataUrl","createUser","externalParameters","AngularMaterialModule","routes","path","pathMatch","redirectTo","canActivate","component","AppRoutingModule","forRoot","imports","AppComponent","userAuthService","autoAuthUser","autoAuthAdmin","getUserAuthStatus","getUserData","getAuthStatus","getAgentData","AppModule","provide","useClass","multi","declarations","providers","bootstrap","entryComponents","AdminAuthGuard","route","isAuth","getAdminAuthStatus","navigate","AdminAuthService","isAuthenticated","getAuthStatusListener","pipe","onHandleAuthentication","token","expiresIn","setTokenTimer","dateNow","Date","expirationDate","getTime","saveAuthData","tokenTimer","setTimeout","authInformation","getAuthData","currentDate","clearTimeout","clearAuthData","localStorage","setItem","toISOString","getItem","expiresInDuration","removeItem","AdminLoginComponent","login","reset","AgentForgotPasswordComponent","_location","back","forgotPassword","backClicked","AgentResetPasswordComponent","params","getResetPassword","postResetPassword","AgentLoginComponent","AuthGuard","AuthInterceptor","getToken","userToken","adminToken","authRequest","clone","headers","Authorization","AdminAuthorization","UserAuthorization","handle","AuthService","authStatusListener","setTimer","currentDateStamp","ForgotPasswordComponent","userAuthController","LoginComponent","ResetPasswordComponent","UserAuthGuard","UserAuthService","userData","CardBackComponent","CardComponent","DashboardComponent","ErrorInterceptorService","dialog","errorMessage","open","data","ErrorComponent","FooterComponent","HeaderComponent","HomeComponent","getUserDataStatus","ProfileComponent","userForm","LoadingSpinnerComponent","SidebarComponent","UserComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit,} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AdminService } from '../admin.service';\r\nimport { mimeType } from './mimetype-validator';\r\nimport { AdminAuthService } from 'src/app/auth/admin.auth.service';\r\n\r\n@Component({\r\n  selector: 'app-add-agent',\r\n  templateUrl: './add-agent.component.html',\r\n  styleUrls: ['./add-agent.component.css']\r\n})\r\nexport class AddAgentComponent implements OnInit {\r\n  adminForm : FormGroup;\r\n  imagePreview: string;\r\n\r\n  constructor(private adminService : AdminService, private adminAuthService: AdminAuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  private init() {\r\n    this.adminForm = new FormGroup({\r\n      name : new FormControl(null, [Validators.required]),\r\n      email : new FormControl(null, [Validators.required, Validators.email]),\r\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)]),\r\n      image : new FormControl(null, [Validators.required], [mimeType])\r\n    });\r\n  }\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.adminForm.patchValue({ image: file });\r\n    this.adminForm.get('image').updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = (reader.result as string);\r\n    }\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSubmit() {\r\n    if(!this.adminForm.valid) {\r\n      return;\r\n    }\r\n    this.adminService.createAgent(this.adminForm.value);\r\n  }\r\n\r\n  logout() {\r\n    this.adminAuthService.logout();\r\n  }\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n  <!-- partial:partials/_navbar.html -->\r\n  <nav class=\"navbar default-layout col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n    <div class=\"text-center navbar-brand-wrapper d-flex align-items-top justify-content-center\">\r\n      <a class=\"navbar-brand brand-logo\" href=\"index.html\">\r\n        Card System </a>\r\n      <a class=\"navbar-brand brand-logo-mini\" href=\"index.html\">\r\n        Card System </a>\r\n    </div>\r\n    <div class=\"navbar-menu-wrapper d-flex align-items-center\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item dropdown d-none d-xl-inline-block user-dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" id=\"UserDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            <img class=\"img-xs rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"Profile image\"> </a>\r\n          <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\">\r\n            <div class=\"dropdown-header text-center\">\r\n              <img class=\"img-md rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"Profile image\">\r\n              <p class=\"mb-1 mt-3 font-weight-semibold\">Alabidun Mubarak</p>\r\n              <p class=\"font-weight-light text-muted mb-0\">Admin</p>\r\n            </div>\r\n            <a class=\"dropdown-item\" routerLink=\"/admin/profile\">My Profile <i\r\n                class=\"dropdown-item-icon ti-dashboard\"></i></a>\r\n            <a class=\"dropdown-item\" style=\"cursor: pointer;\" (click)=\"logout()\">Sign Out<i\r\n                class=\"dropdown-item-icon ti-power-off\"></i></a>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\"\r\n        data-toggle=\"offcanvas\">\r\n        <span class=\"mdi mdi-menu\"></span>\r\n      </button>\r\n    </div>\r\n  </nav>\r\n  <!-- partial -->\r\n  <div class=\"container-fluid page-body-wrapper\">\r\n    <!-- partial:partials/_sidebar.html -->\r\n    <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n      <ul class=\"nav\">\r\n        <li class=\"nav-item nav-profile\">\r\n          <a href=\"#\" class=\"nav-link\">\r\n            <div class=\"profile-image\">\r\n              <img class=\"img-xs rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"profile image\">\r\n              <div class=\"dot-indicator bg-success\"></div>\r\n            </div>\r\n            <div class=\"text-wrapper\">\r\n              <p class=\"profile-name\">Alabidun Mubarak</p>\r\n              <p class=\"designation\">Admin</p>\r\n            </div>\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item nav-category\">Main Menu</li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/admin/dashboard\">\r\n            <i class=\"menu-icon typcn typcn-document-text\"></i>\r\n            <span class=\"menu-title\">Dashboard</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" routerLink=\"/admin/add-agent\">\r\n            <i class=\"menu-icon typcn typcn-th-large-outline\"></i>\r\n            <span class=\"menu-title\">Add Agent</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/admin/view-agent\">\r\n            <i class=\"menu-icon typcn typcn-th-large-outline\"></i>\r\n            <span class=\"menu-title\">View Agents</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/admin/profile\">\r\n            <i class=\"menu-icon typcn typcn-bell\"></i>\r\n            <span class=\"menu-title\">Profile</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <!-- partial -->\r\n    <div class=\"main-panel\">\r\n      <div class=\"content-wrapper\">\r\n        <!-- Page Title Header Starts-->\r\n        <div class=\"row page-title-header\">\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <h4 class=\"card-title\">Add Agent</h4>\r\n                <p class=\"card-description\"> Add Agent Information </p>\r\n                <form [formGroup]=\"adminForm\" (ngSubmit)=\"onSubmit()\" class=\"forms-sample\"\r\n                  enctype=\"multipart/form-data\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleInputName1\">Name</label>\r\n                    <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"exampleInputName1\"\r\n                      placeholder=\"Name\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleInputEmail3\">Email address</label>\r\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"exampleInputEmail3\"\r\n                      placeholder=\"Email\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleInputPassword4\">Password</label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"exampleInputPassword4\"\r\n                      placeholder=\"Password\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <div class=\"input-group col-xs-12\">\r\n                      <button class=\"btn btn-secondary\" color=\"basic\" type=\"button\" (click)=\"filePicker.click()\">Pick an\r\n                        image</button>\r\n                      <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\r\n                    </div>\r\n                    <div class=\"image-preview\" *ngIf = \"imagePreview !== '' && imagePreview && adminForm.get('image').valid\">\r\n                      <img \r\n                      [src]=\"imagePreview\" \r\n                      alt=\"adminForm.value.title\">\r\n                    </div>\r\n                  </div>\r\n                  <button [disabled]=\"!adminForm.valid\" type=\"submit\" class=\"btn btn-success mr-2\">Add</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- content-wrapper ends -->\r\n      <!-- partial:partials/_footer.html -->\r\n      <footer class=\"footer\">\r\n        <div class=\"container-fluid clearfix\">\r\n          <span class=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © 2020. All rights\r\n            reserved.</span>\r\n          <span class=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i\r\n              class=\"mdi mdi-heart text-danger\"></i>\r\n          </span>\r\n        </div>\r\n      </footer>\r\n      <!-- partial -->\r\n    </div>\r\n    <!-- main-panel ends -->\r\n  </div>\r\n  <!-- page-body-wrapper ends -->\r\n</div>","import { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of} from 'rxjs';\r\n\r\nexport const mimeType = (control: AbstractControl): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n    if(typeof(control.value) === 'string'){\r\n        return of(null);\r\n    }\r\n    const file = control.value as File;\r\n    const fileReader = new FileReader();\r\n    const frObs = Observable.create((observer: Observer<{ [key: string]: any }>) => {\r\n        fileReader.addEventListener(\"loadend\", () => {\r\n            const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4)\r\n            let header = '';\r\n            let isValid = false\r\n            for (let i = 0; i < arr.length; i++) {\r\n                header += arr[i].toString(16);\r\n            }\r\n            switch (header) {\r\n                case \"89504e47\":\r\n                    isValid = true;\r\n                    break;\r\n                case \"ffd8ffe0\":\r\n                case \"ffd8ffe1\":\r\n                case \"ffd8ffe2\":\r\n                case \"ffd8ffe3\":\r\n                    isValid = true;\r\n                    break;\r\n                default:\r\n                    isValid = false\r\n                    break;\r\n            }\r\n            if(isValid){\r\n                observer.next(null);\r\n            }else{\r\n                observer.next({invalidMimeType: true});\r\n            }\r\n            observer.complete()\r\n        })\r\n        fileReader.readAsArrayBuffer(file);\r\n    });\r\n    return frObs;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AdminAuthService } from 'src/app/auth/admin.auth.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-profile',\r\n  templateUrl: './admin-profile.component.html',\r\n  styleUrls: ['./admin-profile.component.css']\r\n})\r\nexport class AdminProfileComponent implements OnInit {\r\n  adminForm : FormGroup;\r\n  loading = false;\r\n  message : string;\r\n  constructor(private adminAuthService : AdminAuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  private init() {\r\n    this.adminForm = new FormGroup({\r\n      password : new FormControl(null, [Validators.required]),\r\n      newpassword : new FormControl(null, [Validators.required, Validators.minLength(8)]),\r\n      confirmpassword : new FormControl(null, [Validators.required, Validators.minLength(8)])\r\n    })\r\n  }\r\n\r\n  onSubmit(){\r\n    if(!this.adminForm.valid) {\r\n      return;\r\n    }\r\n    if(this.adminForm.value.confirmpassword !== this.adminForm.value.newpassword) {\r\n      this.message = \"No match\";\r\n      return;\r\n    }\r\n    this.loading = true\r\n    this.message = null;\r\n    const password = this.adminForm.value.password;\r\n    const newpassword = this.adminForm.value.newpassword;\r\n    const confirmpassword = this.adminForm.value.confirmpassword;\r\n    this.adminAuthService.changeProfile(password, newpassword, confirmpassword)\r\n    .subscribe(responseData => {\r\n      this.adminForm.setValue({\r\n        'password' : null,\r\n        'newpassword' : null,\r\n        'confirmpassword' : null\r\n      });\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.adminAuthService.logout();\r\n  }\r\n}\r\n","<div class=\"container-scroller\">\r\n      <!-- partial:partials/_navbar.html -->\r\n      <nav class=\"navbar default-layout col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n        <div class=\"text-center navbar-brand-wrapper d-flex align-items-top justify-content-center\">\r\n          <a class=\"navbar-brand brand-logo\" href=\"index.html\">\r\n            Card System </a>\r\n          <a class=\"navbar-brand brand-logo-mini\" href=\"index.html\">\r\n            Card System </a>\r\n        </div>\r\n        <div class=\"navbar-menu-wrapper d-flex align-items-center\">\r\n          <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item dropdown d-none d-xl-inline-block user-dropdown\">\r\n              <a class=\"nav-link dropdown-toggle\" id=\"UserDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <img class=\"img-xs rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"Profile image\"> </a>\r\n              <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\">\r\n                <div class=\"dropdown-header text-center\">\r\n                  <img class=\"img-md rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"Profile image\">\r\n                  <p class=\"mb-1 mt-3 font-weight-semibold\">Alabidun Mubarak</p>\r\n                  <p class=\"font-weight-light text-muted mb-0\">Admin</p>\r\n                </div>\r\n                <a class=\"dropdown-item\" routerLink=\"admin/profile\">My Profile <i class=\"dropdown-item-icon ti-dashboard\"></i></a>\r\n                <a class=\"dropdown-item\" (click) = \"logout()\" style=\"cursor: pointer;\">Sign Out<i class=\"dropdown-item-icon ti-power-off\"></i></a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n            <span class=\"mdi mdi-menu\"></span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <!-- partial -->\r\n      <div class=\"container-fluid page-body-wrapper\">\r\n        <!-- partial:partials/_sidebar.html -->\r\n        <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n          <ul class=\"nav\">\r\n            <li class=\"nav-item nav-profile\">\r\n              <a href=\"#\" class=\"nav-link\">\r\n                <div class=\"profile-image\">\r\n                  <img class=\"img-xs rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"profile image\">\r\n                  <div class=\"dot-indicator bg-success\"></div>\r\n                </div>\r\n                <div class=\"text-wrapper\">\r\n                  <p class=\"profile-name\">Alabidun Mubarak</p>\r\n                  <p class=\"designation\">Admin</p>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item nav-category\">Main Menu</li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/admin/dashboard\">\r\n                <i class=\"menu-icon typcn typcn-document-text\"></i>\r\n                <span class=\"menu-title\">Dashboard</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/admin/add-agent\">\r\n                <i class=\"menu-icon typcn typcn-th-large-outline\"></i>\r\n                <span class=\"menu-title\">Add Agent</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/admin/view-agent\">\r\n                <i class=\"menu-icon typcn typcn-th-large-outline\"></i>\r\n                <span class=\"menu-title\">View Agents</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" routerLink=\"admin/profile\">\r\n                <i class=\"menu-icon typcn typcn-bell\"></i>\r\n                <span class=\"menu-title\">Profile</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <!-- partial -->\r\n        <div class=\"main-panel\">\r\n          <div class=\"content-wrapper\">\r\n            <!-- Page Title Header Starts-->\r\n            <div class=\"row page-title-header\">\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n\r\n              <div class=\"col-md-12\">\r\n                  \r\n                <div class=\"card\"> \r\n                  <div class=\"card-body\">\r\n                      <h4 class=\"card-title\">Profile</h4>\r\n                      <form [formGroup]=\"adminForm\" (ngSubmit)=\"onSubmit()\" class=\"forms-sample\">\r\n                          \r\n                          <div class=\"form-group\">\r\n                              <label for=\"exampleInputPassword4\">Password</label>\r\n                              <input formControlName=\"password\" type=\"password\" class=\"form-control\"\r\n                                  id=\"exampleInputPassword4\" placeholder=\"Password\" >\r\n                          </div>\r\n                          <div class=\"form-group\">\r\n                              <label for=\"exampleInputPassword4\">New Password</label>\r\n                              <input formControlName=\"newpassword\" type=\"password\" class=\"form-control\"\r\n                                  id=\"exampleInputNewPassword4\" placeholder=\"New Password\" >\r\n                                  <mat-error *ngIf=\"message\">{{message}}</mat-error>\r\n                          </div>\r\n                          <div class=\"form-group\">\r\n                              <label for=\"exampleInputPassword4\">Confirm Password</label>\r\n                              <input formControlName=\"confirmpassword\" type=\"password\" class=\"form-control\"\r\n                                  id=\"exampleInputConfirmPassword4\" placeholder=\"Confirm Password\">\r\n                          </div>\r\n                          <button type=\"submit\" class=\"btn btn-success mr-2\" [class.spinner]=\"loading\" [disabled]=\"!adminForm.valid\">Save Changes</button>\r\n                      </form>\r\n                  </div>\r\n              </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- content-wrapper ends -->\r\n          <!-- partial:partials/_footer.html -->\r\n          <footer class=\"footer\">\r\n            <div class=\"container-fluid clearfix\">\r\n              <span class=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © 2020. All rights reserved.</span>\r\n              <span class=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i class=\"mdi mdi-heart text-danger\"></i>\r\n              </span>\r\n            </div>\r\n          </footer>\r\n          <!-- partial -->\r\n        </div>\r\n        <!-- main-panel ends -->\r\n      </div>\r\n      <!-- page-body-wrapper ends -->\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  credentialsForm: FormGroup;\r\n  title = \"Login\";\r\n  \r\n\r\n  constructor(public formBuilder: FormBuilder,public router: Router) { \r\n  \tthis.credentialsForm = this.formBuilder.group({\r\n  \t  \tname: ['', Validators.required],\r\n\t    password: ['', Validators.required]\r\n\t});\r\n  }\r\n\r\n   register() {\r\n  \tthis.title = \"Please wait....\";\r\n    this.router.navigateByUrl(\"admin/dashboard\"); \r\n    console.log(\"clicked\")\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n      <div class=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n        <div class=\"content-wrapper d-flex align-items-center auth auth-bg-1 theme-one\">\r\n          <div class=\"row w-100\">\r\n            <div class=\"col-lg-4 mx-auto\">\r\n              <div class=\"auto-form-wrapper\">\r\n                <form [formGroup]=\"credentialsForm\" (Submit)=\"register()\">\r\n                  <div class=\"form-group\">\r\n                    <label class=\"label\">Username</label>\r\n                    <div class=\"input-group\">\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Username\" formControlName=\"name\">\r\n                      <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text\">\r\n                          <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <div *ngIf=\"!credentialsForm.controls.name.valid &&\r\n\t\t\t\t\t\t    credentialsForm.controls.name.dirty\"\r\n\t\t\t\t\t\t    class=\"validator-error\">\r\n\t\t\t\t\t\t<p>Enter a valid username</p>\r\n\t\t\t\t\t  </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <label class=\"label\">Password</label>\r\n                    <div class=\"input-group\">\r\n                      <input type=\"password\" class=\"form-control\" placeholder=\"*********\" formControlName=\"password\">\r\n                      <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text\">\r\n                          <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <div *ngIf=\"!credentialsForm.controls.password.valid &&\r\n\t\t\t\t\t\t    credentialsForm.controls.password.dirty\"\r\n\t\t\t\t\t\t    class=\"validator-error\">\r\n\t\t\t\t\t\t<p>Enter a valid password</p>\r\n\t\t\t\t\t  </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <button [disabled]=\"!credentialsForm.valid\" class=\"btn btn-primary submit-btn btn-block\" type=\"submit\" (click)=\"register()\">{{ title }}</button>\r\n                  </div>\r\n                  <div class=\"form-group d-flex justify-content-between\">\r\n                    <div class=\"form-check form-check-flat mt-0\">\r\n                      <label class=\"form-check-label\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\" checked> Keep me signed in </label>\r\n                    </div>\r\n                    <!-- <a href=\"#\" class=\"text-small forgot-password text-black\">Forgot Password</a> -->\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- content-wrapper ends -->\r\n      </div>\r\n      <!-- page-body-wrapper ends -->\r\n    </div>","import { Injectable } from '@angular/core';\r\nimport { Agent } from '../shared/agent.model';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../shared/users.model';\r\nconst BACKEND_URL = environment.apiUrl;\r\n@Injectable({\r\n    providedIn : \"root\"\r\n})\r\nexport class AdminService {\r\n    private agents : Agent[] = [];\r\n    private agentStatusListener = new BehaviorSubject<Agent[]>([]);\r\n    private users : User[] = [];\r\n    private userStatusListener = new BehaviorSubject<User[]>([]);\r\n    constructor(private http :  HttpClient, private router: Router) {}\r\n\r\n    getCounts() {\r\n        return this.http.get<{userCount: number, agentCount: number}>(BACKEND_URL + 'admin/counts');\r\n    }\r\n    getAgentStatusListener() {\r\n        return this.agentStatusListener.asObservable();\r\n    }\r\n    getUserStatusListener() {\r\n        return this.userStatusListener.asObservable();\r\n    } \r\n    createAgent(agent : Agent) {\r\n        const postCredentials = new FormData();\r\n        postCredentials.append('name', agent.name);\r\n        postCredentials.append('email', agent.email);\r\n        postCredentials.append('password', agent.password);\r\n        postCredentials.append('image', agent.image, agent.name);\r\n        this.http.post<{agent: Agent}>(BACKEND_URL + 'admin/agent', postCredentials)\r\n        .subscribe(responseData => {\r\n            this.agents.push(responseData.agent);\r\n            this.agentStatusListener.next(this.agents);\r\n            this.router.navigateByUrl('/admin/dashboard');\r\n        });\r\n    }\r\n    geAgentUsers() {\r\n        this.http.get<{users : User[], agents: Agent[]}>(BACKEND_URL + 'admin/agents-users')\r\n        .subscribe(responseData => {\r\n            this.users = responseData.users;\r\n            this.agents = responseData.agents;\r\n            this.userStatusListener.next(this.users);\r\n            this.agentStatusListener.next(this.agents);\r\n        });\r\n    }\r\n    approve(userId: string) {\r\n        const postData = {\r\n            approval : true\r\n        }\r\n        this.http.post<{user : User}>(BACKEND_URL + 'admin/agent/user/approve/' + userId, postData)\r\n        .subscribe(responseData => {\r\n            const getUsers = [...this.users];\r\n            const userFiltered = getUsers.findIndex(p => p._id === userId);\r\n            getUsers[userFiltered] = responseData.user;\r\n            this.users = [...getUsers];\r\n            this.userStatusListener.next(this.users);\r\n        });\r\n    }\r\n\r\n    agentAccountStatus(agentId : string) {\r\n        const postData = {\r\n            agentId : agentId\r\n        }\r\n        this.http.post<{agent : Agent}>(BACKEND_URL + 'admin/agent/account', postData)\r\n        .subscribe(responseData => {\r\n            const agentFilter = this.agents.findIndex(p => p._id === agentId);\r\n            this.agents[agentFilter] = responseData.agent;\r\n            this.agentStatusListener.next(this.agents);\r\n        });\r\n    }\r\n    deleteAgent(agentId : string) {\r\n        this.http.delete<{message : string}>(BACKEND_URL + 'admin/agent/remove/' + agentId)\r\n        .subscribe(responseData => {\r\n            const getAgents = [...this.agents];\r\n            const getFilteredAgent = getAgents.filter(p => p._id !== agentId);\r\n            this.agents = [...getFilteredAgent];\r\n            this.agentStatusListener.next(this.agents);\r\n        });\r\n    }\r\n}","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { User } from 'src/app/shared/users.model';\r\nimport { AdminService } from '../admin.service';\r\nimport { AdminAuthService } from 'src/app/auth/admin.auth.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { Agent } from 'src/app/shared/agent.model';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport { MatSort} from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard-page',\r\n  templateUrl: './dashboard-page.component.html',\r\n  styleUrls: ['./dashboard-page.component.css']\r\n})\r\nexport class DashboardPageComponent implements OnInit, OnDestroy {\r\n  displayedColumns = [\r\n  'Name', 'Unique Id', 'Email', 'Updated On', 'Gender', 'D.O.B', 'Zone', \r\n  'Unit', 'Phone No', 'State', 'Action'\r\n  ];\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  users: User[] = [];\r\n  agents: Agent[] = [];\r\n  counts: { userCount: number, agentCount: number } = { userCount: 0, agentCount: 0 };\r\n  arrayCount: number = 0;\r\n  private usersSubscription: Subscription;\r\n  private agentsSubscription: Subscription;\r\n  constructor(private adminService: AdminService, private adminAuthService: AdminAuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.adminService.geAgentUsers();\r\n    this.usersSubscription = this.adminService.getUserStatusListener()\r\n      .subscribe(responseData => {\r\n        this.users = responseData;\r\n        this.counts.userCount = this.users.length;\r\n            this.dataSource = new MatTableDataSource(this.users);\r\n      });\r\n    this.agentsSubscription = this.adminService.getAgentStatusListener()\r\n      .subscribe(responseData => {\r\n        this.agents = responseData;\r\n        this.counts.agentCount = this.agents.length;\r\n      });\r\n  }\r\n\r\n  onApprove(userId: string) {\r\n    \r\n    this.adminService.approve(userId);\r\n    // this.getCount();\r\n  }\r\n\r\n  logout() {\r\n    this.adminAuthService.logout();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.usersSubscription.unsubscribe();\r\n    this.agentsSubscription.unsubscribe();\r\n  }\r\n\r\n  onAccountStatus(agentId : string) {\r\n    this.adminService.agentAccountStatus(agentId);\r\n  }\r\n\r\n  onDelete(agentId : string) {\r\n    this.adminService.deleteAgent(agentId);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n}\r\n","<body>\r\n    <div class=\"container-scroller\">\r\n      <!-- partial:partials/_navbar.html -->\r\n      <nav class=\"navbar default-layout col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n        <div class=\"text-center navbar-brand-wrapper d-flex align-items-top justify-content-center\">\r\n          <a class=\"navbar-brand brand-logo\" href=\"index.html\">\r\n            Card System </a>\r\n          <a class=\"navbar-brand brand-logo-mini\" href=\"index.html\">\r\n            Card System </a>\r\n        </div>\r\n        <div class=\"navbar-menu-wrapper d-flex align-items-center\">\r\n          <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item dropdown d-none d-xl-inline-block user-dropdown\">\r\n              <a class=\"nav-link dropdown-toggle\" id=\"UserDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <img class=\"img-xs rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"Profile image\"> </a>\r\n              <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\">\r\n                <div class=\"dropdown-header text-center\">\r\n                  <img class=\"img-md rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"Profile image\">\r\n                  <p class=\"mb-1 mt-3 font-weight-semibold\">Alabidun Mubarak</p>\r\n                  <p class=\"font-weight-light text-muted mb-0\">Admin</p>\r\n                </div>\r\n                <a class=\"dropdown-item\" routerLink=\"/admin/profile\">My Profile <i class=\"dropdown-item-icon ti-dashboard\"></i></a>\r\n                <a class=\"dropdown-item\" style=\"cursor: pointer;\" (click)=\"logout()\">Sign Out<i class=\"dropdown-item-icon ti-power-off\"></i></a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n            <span class=\"mdi mdi-menu\"></span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <!-- partial -->\r\n      <div class=\"container-fluid page-body-wrapper\">\r\n        <!-- partial:partials/_sidebar.html -->\r\n        <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n          <ul class=\"nav\">\r\n            <li class=\"nav-item nav-profile\">\r\n              <a href=\"#\" class=\"nav-link\">\r\n                <div class=\"profile-image\">\r\n                  <img class=\"img-xs rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"profile image\">\r\n                  <div class=\"dot-indicator bg-success\"></div>\r\n                </div>\r\n                <div class=\"text-wrapper\">\r\n                  <p class=\"profile-name\">Alabidun Mubarak</p>\r\n                  <p class=\"designation\">Admin</p>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item nav-category\">Main Menu</li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" routerLink=\"#\">\r\n                <i class=\"menu-icon typcn typcn-document-text\"></i>\r\n                <span class=\"menu-title\">Dashboard</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/admin/add-agent\">\r\n                <i class=\"menu-icon typcn typcn-th-large-outline\"></i>\r\n                <span class=\"menu-title\">Add Agent</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/admin/view-agent\">\r\n                <i class=\"menu-icon typcn typcn-th-large-outline\"></i>\r\n                <span class=\"menu-title\">View Agents</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/admin/profile\">\r\n                <i class=\"menu-icon typcn typcn-bell\"></i>\r\n                <span class=\"menu-title\">Profile</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <!-- partial -->\r\n        <div class=\"main-panel\">\r\n          <div class=\"content-wrapper\">\r\n            <!-- Page Title Header Starts-->\r\n            <div class=\"row page-title-header\">\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"row\">\r\n                  \r\n                  <div class=\"col-md-6 grid-margin stretch-card average-price-card\">\r\n                    <div class=\"card text-white\">\r\n                      <div class=\"card-body\">\r\n                        <div class=\"d-flex justify-content-between pb-2 align-items-center\">\r\n                          <h2 class=\"font-weight-semibold mb-0\">{{ counts?.userCount }}</h2>\r\n                          <div class=\"icon-holder\">\r\n                            <i class=\"mdi mdi-briefcase-outline\"></i>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between\">\r\n                          <h5 class=\"font-weight-semibold mb-0\">Cards</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 grid-margin stretch-card average-price-card\">\r\n                    <div class=\"card text-white\">\r\n                      <div class=\"card-body\">\r\n                        <div class=\"d-flex justify-content-between pb-2 align-items-center\">\r\n                          <h2 class=\"font-weight-semibold mb-0\">{{ counts?.agentCount}}</h2>\r\n                          <div class=\"icon-holder\">\r\n                            <i class=\"mdi mdi-briefcase-outline\"></i>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between\">\r\n                          <h5 class=\"font-weight-semibold mb-0\">Agents</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"modal fade\" id=\"{{ user?.uniqueId }}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" *ngFor = \"let user of users\">\r\n                    <div class=\"modal-dialog\" role=\"document\">\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <h5 class=\"modal-title\" id=\"exampleModalLabel\">ID Card</h5>\r\n                          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                          </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                          <app-card [data]=\"user\"></app-card>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-12 grid-margin\">\r\n                    <div class=\"card\">\r\n                      <div class=\"card-body\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                          <h4 class=\"card-title mb-0\">Users</h4>\r\n                        </div>\r\n                        <p>Registered Users</p>\r\n                        <div class=\"example-header\">\r\n                          <mat-form-field>\r\n                            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"example-container mat-elevation-z8\">\r\n\r\n                          <mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                            <!-- Name Column -->\r\n                            <ng-container matColumnDef=\"Name\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.firstname}} {{row.middlename}} {{row.lastname}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- UniqueID Column -->\r\n                            <ng-container matColumnDef=\"Unique Id\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header>Unique ID </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.uniqueId | uppercase}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Progress Column -->\r\n                            <ng-container matColumnDef=\"Email\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.email}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Name Column -->\r\n                            <ng-container matColumnDef=\"Updated On\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Updated On </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.updatedAt | date}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"Gender\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Gender </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.gender}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"D.O.B\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> D.O.B </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.dob}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"Zone\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Zone \r\n                              </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.zone}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"Unit\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Unit\r\n                              </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.unit}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"Phone No\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Phone No </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.phone_no}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"State\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> State </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.state}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"Action\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Action </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> \r\n                                <button class=\"btn btn-secondary\" data-toggle=\"modal\" \r\n                                  [attr.data-target]=\"'#'+row.uniqueId\">View\r\n                                </button> &nbsp;\r\n                                  <button class=\"btn badge {{row.approve? 'badge-success':'badge-danger'}}\" (click) = \"onApprove(row._id)\">{{row.approve? 'Approved' : 'Approve'}}</button>\r\n                                </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                            </mat-row>\r\n                          </mat-table>\r\n\r\n                          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- content-wrapper ends -->\r\n          <!-- partial:partials/_footer.html -->\r\n          <footer class=\"footer\">\r\n            <div class=\"container-fluid clearfix\">\r\n              <span class=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © 2020. All rights reserved.</span>\r\n              <span class=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i class=\"mdi mdi-heart text-danger\"></i>\r\n              </span>\r\n            </div>\r\n          </footer>\r\n          <!-- partial -->\r\n        </div>\r\n        <!-- main-panel ends -->\r\n      </div>\r\n      <!-- page-body-wrapper ends -->\r\n    </div>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { AdminService } from '../admin.service';\r\nimport { User } from 'src/app/shared/users.model';\r\nimport { AdminAuthService } from 'src/app/auth/admin.auth.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { Agent } from 'src/app/shared/agent.model';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport { MatSort} from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n@Component({\r\n  selector: 'app-view',\r\n  templateUrl: './view.component.html',\r\n  styleUrls: ['./view.component.css']\r\n})\r\nexport class ViewComponent implements OnInit {\r\ndisplayedColumns = [\r\n  'Name', 'Email', 'Added On', 'Status', 'Action'\r\n  ];\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  users: User[] = [];\r\n  agents: Agent[] = [];\r\n  counts: { userCount: number, agentCount: number } = { userCount: 0, agentCount: 0 };\r\n  arrayCount: number = 0;\r\n  private usersSubscription: Subscription;\r\n  private agentsSubscription: Subscription;\r\n  constructor(private adminService: AdminService, private adminAuthService: AdminAuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.adminService.geAgentUsers();\r\n    this.usersSubscription = this.adminService.getUserStatusListener()\r\n      .subscribe(responseData => {\r\n        this.users = responseData;\r\n        this.counts.userCount = this.users.length;\r\n      });\r\n    this.agentsSubscription = this.adminService.getAgentStatusListener()\r\n      .subscribe(responseData => {\r\n        this.agents = responseData;\r\n        this.dataSource = new MatTableDataSource(this.agents);\r\n        this.counts.agentCount = this.agents.length;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    this.adminAuthService.logout();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.usersSubscription.unsubscribe();\r\n    this.agentsSubscription.unsubscribe();\r\n  }\r\n\r\n  onAccountStatus(agentId : string) {\r\n    this.adminService.agentAccountStatus(agentId);\r\n  }\r\n\r\n  onDelete(agentId : string) {\r\n    this.adminService.deleteAgent(agentId);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n}\r\n\r\n","<body>\r\n    <div class=\"container-scroller\">\r\n      <!-- partial:partials/_navbar.html -->\r\n      <nav class=\"navbar default-layout col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n        <div class=\"text-center navbar-brand-wrapper d-flex align-items-top justify-content-center\">\r\n          <a class=\"navbar-brand brand-logo\" href=\"index.html\">\r\n            Card System </a>\r\n          <a class=\"navbar-brand brand-logo-mini\" href=\"index.html\">\r\n            Card System </a>\r\n        </div>\r\n        <div class=\"navbar-menu-wrapper d-flex align-items-center\">\r\n          <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item dropdown d-none d-xl-inline-block user-dropdown\">\r\n              <a class=\"nav-link dropdown-toggle\" id=\"UserDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <img class=\"img-xs rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"Profile image\"> </a>\r\n              <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\">\r\n                <div class=\"dropdown-header text-center\">\r\n                  <img class=\"img-md rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"Profile image\">\r\n                  <p class=\"mb-1 mt-3 font-weight-semibold\">Alabidun Mubarak</p>\r\n                  <p class=\"font-weight-light text-muted mb-0\">Admin</p>\r\n                </div>\r\n                <a class=\"dropdown-item\" routerLink=\"/admin/profile\">My Profile <i class=\"dropdown-item-icon ti-dashboard\"></i></a>\r\n                <a class=\"dropdown-item\" style=\"cursor: pointer;\" (click)=\"logout()\">Sign Out<i class=\"dropdown-item-icon ti-power-off\"></i></a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n            <span class=\"mdi mdi-menu\"></span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <!-- partial -->\r\n      <div class=\"container-fluid page-body-wrapper\">\r\n        <!-- partial:partials/_sidebar.html -->\r\n        <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n          <ul class=\"nav\">\r\n            <li class=\"nav-item nav-profile\">\r\n              <a href=\"#\" class=\"nav-link\">\r\n                <div class=\"profile-image\">\r\n                  <img class=\"img-xs rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"profile image\">\r\n                  <div class=\"dot-indicator bg-success\"></div>\r\n                </div>\r\n                <div class=\"text-wrapper\">\r\n                  <p class=\"profile-name\">Alabidun Mubarak</p>\r\n                  <p class=\"designation\">Admin</p>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item nav-category\">Main Menu</li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/admin/dashboard\">\r\n                <i class=\"menu-icon typcn typcn-document-text\"></i>\r\n                <span class=\"menu-title\">Dashboard</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/admin/add-agent\">\r\n                <i class=\"menu-icon typcn typcn-th-large-outline\"></i>\r\n                <span class=\"menu-title\">Add Agent</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" routerLink=\"/admin/view-agent\">\r\n                <i class=\"menu-icon typcn typcn-th-large-outline\"></i>\r\n                <span class=\"menu-title\">View Agents</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/admin/profile\">\r\n                <i class=\"menu-icon typcn typcn-bell\"></i>\r\n                <span class=\"menu-title\">Profile</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <!-- partial -->\r\n        <div class=\"main-panel\">\r\n          <div class=\"content-wrapper\">\r\n            <!-- Page Title Header Starts-->\r\n            <div class=\"row page-title-header\">\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"row\">\r\n                  \r\n                  <div class=\"col-md-6 grid-margin stretch-card average-price-card\">\r\n                    <div class=\"card text-white\">\r\n                      <div class=\"card-body\">\r\n                        <div class=\"d-flex justify-content-between pb-2 align-items-center\">\r\n                          <h2 class=\"font-weight-semibold mb-0\">{{ counts?.userCount }}</h2>\r\n                          <div class=\"icon-holder\">\r\n                            <i class=\"mdi mdi-briefcase-outline\"></i>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between\">\r\n                          <h5 class=\"font-weight-semibold mb-0\">Cards</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 grid-margin stretch-card average-price-card\">\r\n                    <div class=\"card text-white\">\r\n                      <div class=\"card-body\">\r\n                        <div class=\"d-flex justify-content-between pb-2 align-items-center\">\r\n                          <h2 class=\"font-weight-semibold mb-0\">{{ counts?.agentCount}}</h2>\r\n                          <div class=\"icon-holder\">\r\n                            <i class=\"mdi mdi-briefcase-outline\"></i>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between\">\r\n                          <h5 class=\"font-weight-semibold mb-0\">Agents</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"modal fade\" id=\"{{ user?.uniqueId }}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" *ngFor = \"let user of users\">\r\n                    <div class=\"modal-dialog\" role=\"document\">\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <h5 class=\"modal-title\" id=\"exampleModalLabel\">ID Card</h5>\r\n                          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                          </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                          <app-card [data]=\"user\"></app-card>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-12 grid-margin\">\r\n                    <div class=\"card\">\r\n                      <div class=\"card-body\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                          <h4 class=\"card-title mb-0\">Agents</h4>\r\n                        </div>\r\n                        <p>Registered Agents</p>\r\n                        <div class=\"example-header\">\r\n                          <mat-form-field>\r\n                            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"example-container mat-elevation-z8\">\r\n\r\n\r\n                          <mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                            <!-- Name Column -->\r\n                            <ng-container matColumnDef=\"Name\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.name }} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Email Column -->\r\n                            <ng-container matColumnDef=\"Email\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.email}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- DateAdded Column -->\r\n                            <ng-container matColumnDef=\"Added On\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Added On </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.updatedAt | date}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Status Column -->\r\n                            <ng-container matColumnDef=\"Status\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.is_active? 'Active' : 'Disabled' }} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"Action\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Action </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> \r\n                                <button class=\"btn badge {{row?.is_active? 'badge-danger' : 'badge-success'}} mr-1\" (click) = \"onAccountStatus(row?._id)\">\r\n                                    {{row?.is_active? 'Deactivate' : 'Activate'}}\r\n                                  </button>\r\n                                  <button class=\"btn badge badge-danger\" (click)=\"onDelete(row?._id)\">Delete</button>\r\n                                </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                            </mat-row>\r\n                          </mat-table>\r\n\r\n                          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- content-wrapper ends -->\r\n          <!-- partial:partials/_footer.html -->\r\n          <footer class=\"footer\">\r\n            <div class=\"container-fluid clearfix\">\r\n              <span class=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © 2020. All rights reserved.</span>\r\n              <span class=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i class=\"mdi mdi-heart text-danger\"></i>\r\n              </span>\r\n            </div>\r\n          </footer>\r\n          <!-- partial -->\r\n        </div>\r\n        <!-- main-panel ends -->\r\n      </div>\r\n      <!-- page-body-wrapper ends -->\r\n    </div>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { User } from 'src/app/shared/users.model';\r\nimport { AgentService } from '../agent.service';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { Agent } from 'src/app/shared/agent.model';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport { MatSort} from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-agent-dashboard',\r\n  templateUrl: './agent-dashboard.component.html',\r\n  styleUrls: ['./agent-dashboard.component.css']\r\n})\r\nexport class AgentDashboardComponent implements OnInit, OnDestroy {\r\n  displayedColumns = [\r\n  'Name', 'Unique Id', 'Email', 'Updated On', 'Gender', 'D.O.B', 'Zone', \r\n  'Unit', 'Phone No', 'State', 'Action'\r\n  ];\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  users : User[] = [];\r\n  userInformation : Agent;\r\n  private userSubscription : Subscription;\r\n  counts: { userCount: number } = {userCount: 0};\r\n  constructor(private agentService : AgentService, private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.agentService.getUsers();\r\n    this.userSubscription = this.agentService.getUserStatusListener()\r\n    .subscribe(responseData => {\r\n      this.users = responseData;\r\n      this.dataSource = new MatTableDataSource(this.users);\r\n      this.counts.userCount = this.users.length; \r\n    });\r\n    this.authService.getAgentDataStatus()\r\n    .subscribe(responseData => {\r\n      this.userInformation = responseData;\r\n    });\r\n  }\r\n\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.userSubscription.unsubscribe();\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n      <!-- partial:partials/_navbar.html -->\r\n      <nav class=\"navbar default-layout col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n        <div class=\"text-center navbar-brand-wrapper d-flex align-items-top justify-content-center\">\r\n          <a class=\"navbar-brand brand-logo\" href=\"index.html\">\r\n            Card System </a>\r\n          <a class=\"navbar-brand brand-logo-mini\" href=\"index.html\">\r\n            Card System </a>\r\n        </div>\r\n        <div class=\"navbar-menu-wrapper d-flex align-items-center\">\r\n          <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item dropdown d-none d-xl-inline-block user-dropdown\">\r\n              <a class=\"nav-link dropdown-toggle\" id=\"UserDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <img class=\"img-xs rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"Profile image\"> </a>\r\n              <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\">\r\n                <div class=\"dropdown-header text-center\">\r\n                  <img class=\"img-md rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"Profile image\">\r\n                  <p class=\"mb-1 mt-3 font-weight-semibold\">{{userInformation?.name}}</p>\r\n                  <p class=\"font-weight-light text-muted mb-0\">Agent</p>\r\n                </div>\r\n                <a class=\"dropdown-item\" routerLink=\"/agent/profile\">My Profile <i class=\"dropdown-item-icon ti-dashboard\"></i></a>\r\n                <a class=\"dropdown-item\" style=\"cursor: pointer;\" (click)= \"logout()\">Sign Out<i class=\"dropdown-item-icon ti-power-off\"></i></a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n            <span class=\"mdi mdi-menu\"></span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <!-- partial -->\r\n      <div class=\"container-fluid page-body-wrapper\">\r\n        <!-- partial:partials/_sidebar.html -->\r\n        <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n          <ul class=\"nav\">\r\n            <li class=\"nav-item nav-profile\">\r\n              <a href=\"#\" class=\"nav-link\">\r\n                <div class=\"profile-image\">\r\n                  <img class=\"img-xs rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"profile image\">\r\n                  <div class=\"dot-indicator bg-success\"></div>\r\n                </div>\r\n                <div class=\"text-wrapper\">\r\n                  <p class=\"profile-name\">{{userInformation?.name}}</p>\r\n                  <p class=\"designation\">Agent</p>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item nav-category\">Main Menu</li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" routerLink=\"/agent/dashboard\">\r\n                <i class=\"menu-icon typcn typcn-document-text\"></i>\r\n                <span class=\"menu-title\">Dashboard</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/agent/capture\">\r\n                <i class=\"menu-icon typcn typcn-th-large-outline\"></i>\r\n                <span class=\"menu-title\">Add Bio-data</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/agent/profile\">\r\n                <i class=\"menu-icon typcn typcn-bell\"></i>\r\n                <span class=\"menu-title\">Profile</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <!-- partial -->\r\n        <div class=\"main-panel\">\r\n          <div class=\"content-wrapper\">\r\n            <!-- Page Title Header Starts-->\r\n            <div class=\"row page-title-header\">\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"row\">\r\n                  \r\n                  <div class=\"col-md-6 grid-margin stretch-card average-price-card\">\r\n                    <div class=\"card text-white\">\r\n                      <div class=\"card-body\">\r\n                        <div class=\"d-flex justify-content-between pb-2 align-items-center\">\r\n                          <h2 class=\"font-weight-semibold mb-0\">{{ counts?.userCount }}</h2>\r\n                          <div class=\"icon-holder\">\r\n                            <i class=\"mdi mdi-briefcase-outline\"></i>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between\">\r\n                          <h5 class=\"font-weight-semibold mb-0\">Cards</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"modal fade\" id=\"{{ user?.uniqueId }}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" *ngFor = \"let user of users\">\r\n                    <div class=\"modal-dialog\" role=\"document\">\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <h5 class=\"modal-title\" id=\"exampleModalLabel\">ID Card</h5>\r\n                          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                          </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                          <app-card [data]=\"user\"></app-card>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-12 grid-margin\">\r\n                    <div class=\"card\">\r\n                      <div class=\"card-body\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                          <h4 class=\"card-title mb-0\">Users</h4>\r\n                        </div>\r\n                        <p>Registered Users</p>\r\n                        <div class=\"example-container mat-elevation-z8\">\r\n\r\n                          <mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                            <!-- Name Column -->\r\n                            <ng-container matColumnDef=\"Name\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.firstname}} {{row.middlename}} {{row.lastname}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- UniqueID Column -->\r\n                            <ng-container matColumnDef=\"Unique Id\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header>Unique ID </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.uniqueId | uppercase}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Progress Column -->\r\n                            <ng-container matColumnDef=\"Email\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.email}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Name Column -->\r\n                            <ng-container matColumnDef=\"Updated On\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Updated On </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.updatedAt | date}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"Gender\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Gender </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.gender}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"D.O.B\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> D.O.B </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.dob}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"Zone\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Zone \r\n                              </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.zone}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"Unit\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Unit\r\n                              </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.unit}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"Phone No\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Phone No </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.phone_no}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"State\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> State </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row.state}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <!-- Color Column -->\r\n                            <!-- Color Column -->\r\n                            <ng-container matColumnDef=\"Action\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Action </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> \r\n                                <button class=\"btn btn-secondary\" data-toggle=\"modal\" \r\n                                  [attr.data-target]=\"'#'+row.uniqueId\">View\r\n                                </button> &nbsp;\r\n                                  <button class=\"btn badge {{row.approve? 'badge-success':'badge-danger'}}\">{{row.approve? 'Approved' : 'Approve'}}</button>\r\n                                </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                            </mat-row>\r\n                          </mat-table>\r\n\r\n                          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- content-wrapper ends -->\r\n          <!-- partial:partials/_footer.html -->\r\n          <footer class=\"footer\">\r\n            <div class=\"container-fluid clearfix\">\r\n              <span class=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © 2020. All rights reserved.</span>\r\n              <span class=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i class=\"mdi mdi-heart text-danger\"></i>\r\n              </span>\r\n            </div>\r\n          </footer>\r\n          <!-- partial -->\r\n        </div>\r\n        <!-- main-panel ends -->\r\n      </div>\r\n      <!-- page-body-wrapper ends -->\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Agent } from '../../shared/agent.model';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-agent-profile',\r\n  templateUrl: './agent-profile.component.html',\r\n  styleUrls: ['./agent-profile.component.css']\r\n})\r\nexport class AgentProfileComponent implements OnInit {\r\n  agent : Agent = {\r\n    name : '',\r\n    email : '',\r\n    image : '',\r\n  };\r\n  loading = false;\r\n  agentForm : FormGroup;\r\n  userInformation : Agent;\r\n  message : string;\r\n  constructor(private authService : AuthService, private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n    this.authService.getProfile()\r\n    .subscribe(responseData => {\r\n      this.agent = responseData.agent;\r\n      this.userInformation = responseData.agent;\r\n      this.agentForm.setValue({\r\n        'name' : responseData.agent.name,\r\n        'email' : responseData.agent.email,\r\n        'password' : null,\r\n        'newpassword' : null,\r\n        'confirmpassword' : null\r\n      })\r\n    });\r\n  }\r\n  private init() {\r\n    this.agentForm = new FormGroup({\r\n      name : new FormControl(null, [Validators.required]),\r\n      email : new FormControl({value : null, disabled: true}, [Validators.required, Validators.email]),\r\n      password : new FormControl(null),\r\n      newpassword : new FormControl(null, [Validators.minLength(8)]),\r\n      confirmpassword : new FormControl(null, [Validators.minLength(8)])\r\n    });\r\n  }\r\n  onSubmit() {\r\n    if(!this.agentForm.valid) {\r\n      return;\r\n    }\r\n    const password = this.agentForm.value.password;\r\n    const confirmpassword = this.agentForm.value.confirmpassword;\r\n    const newpassword = this.agentForm.value.newpassword;\r\n    if(password !== null && newpassword !==null && confirmpassword !== newpassword) {\r\n      this.message = \"No match\";\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.message = null;\r\n    this.authService.changeProfile(this.agentForm.value)\r\n    .subscribe(responseData => {\r\n      this.agent = responseData.agent;\r\n      this.userInformation = responseData.agent;\r\n      this.agentForm.setValue({\r\n        'name' : responseData.agent.name,\r\n        'email' : responseData.agent.email,\r\n        'password' : null,\r\n        'newpassword' : null,\r\n        'confirmpassword' : null\r\n      });\r\n      this.authService.agentData.next(responseData.agent);\r\n      this.loading = false;\r\n    }, error => {\r\n      this.loading = false;\r\n\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n    <!-- partial:partials/_navbar.html -->\r\n    <nav class=\"navbar default-layout col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n        <div class=\"text-center navbar-brand-wrapper d-flex align-items-top justify-content-center\">\r\n            <a class=\"navbar-brand brand-logo\" href=\"index.html\">\r\n                Card System </a>\r\n            <a class=\"navbar-brand brand-logo-mini\" href=\"index.html\">\r\n                Card System </a>\r\n        </div>\r\n        <div class=\"navbar-menu-wrapper d-flex align-items-center\">\r\n            <ul class=\"navbar-nav ml-auto\">\r\n                <li class=\"nav-item dropdown d-none d-xl-inline-block user-dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle\" id=\"UserDropdown\" href=\"#\" data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\">\r\n                        <img class=\"img-xs rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"Profile image\">\r\n                    </a>\r\n                    <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\">\r\n                        <div class=\"dropdown-header text-center\">\r\n                            <img class=\"img-md rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"Profile image\">\r\n                            <p class=\"mb-1 mt-3 font-weight-semibold\">{{ userInformation?.name}}</p>\r\n                            <p class=\"font-weight-light text-muted mb-0\">Agent</p>\r\n                        </div>\r\n                        <a class=\"dropdown-item\" routerLink=\"/profile\">My Profile <i\r\n                                class=\"dropdown-item-icon ti-dashboard\"></i></a>\r\n                        <a class=\"dropdown-item\" (click)=\"logout()\" style=\"cursor: pointer;\">Sign Out<i\r\n                                class=\"dropdown-item-icon ti-power-off\"></i></a>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\"\r\n                data-toggle=\"offcanvas\">\r\n                <span class=\"mdi mdi-menu\"></span>\r\n            </button>\r\n        </div>\r\n    </nav>\r\n    <!-- partial -->\r\n    <div class=\"container-fluid page-body-wrapper\">\r\n        <!-- partial:partials/_sidebar.html -->\r\n        <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n            <ul class=\"nav\">\r\n                <li class=\"nav-item nav-profile\">\r\n                    <a href=\"#\" class=\"nav-link\">\r\n                        <div class=\"profile-image\">\r\n                            <img class=\"img-xs rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"profile image\">\r\n                            <div class=\"dot-indicator bg-success\"></div>\r\n                        </div>\r\n                        <div class=\"text-wrapper\">\r\n                            <p class=\"profile-name\">{{userInformation?.name}}</p>\r\n                            <p class=\"designation\">Agent</p>\r\n                        </div>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item nav-category\">Main Menu</li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"/agent\">\r\n                        <i class=\"menu-icon typcn typcn-document-text\"></i>\r\n                        <span class=\"menu-title\">Dashboard</span>\r\n                    </a>\r\n                </li>\r\n\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link active\" routerLink=\"/agent/profile\">\r\n                        <i class=\"menu-icon typcn typcn-bell\"></i>\r\n                        <span class=\"menu-title\">Profile</span>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        <!-- partial -->\r\n        <div class=\"main-panel\">\r\n            <div class=\"content-wrapper\">\r\n                <!-- Page Title Header Starts-->\r\n                <div class=\"row page-title-header\">\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <h4 class=\"card-title\">Profile</h4>\r\n                                <form [formGroup]=\"agentForm\" (ngSubmit)=\"onSubmit()\" class=\"forms-sample\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleInputName1\">Name</label>\r\n                                        <input formControlName=\"name\" type=\"text\" class=\"form-control\"\r\n                                            id=\"exampleInputName1\" placeholder=\"Name\">\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleInputEmail3\">Email address</label>\r\n                                        <input formControlName=\"email\" type=\"email\" class=\"form-control\"\r\n                                            id=\"exampleInputEmail3\" placeholder=\"Email\">\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleInputPassword4\">Password</label>\r\n                                        <input formControlName=\"password\" type=\"password\" class=\"form-control\"\r\n                                            id=\"exampleInputPassword4\" placeholder=\"Password\">\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleInputPassword4\">New Password</label>\r\n                                        <input formControlName=\"newpassword\" type=\"password\" class=\"form-control\"\r\n                                            id=\"exampleInputNewPassword4\" placeholder=\"New Password\">\r\n                                        <mat-error *ngIf=\"message\">{{message}}</mat-error>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleInputPassword4\">Confirm Password</label>\r\n                                        <input formControlName=\"confirmpassword\" type=\"password\" class=\"form-control\"\r\n                                            id=\"exampleInputConfirmPassword4\" placeholder=\"Confirm Password\">\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"btn btn-success mr-2\" [class.spinner]=\"loading\"\r\n                                        [disabled]=\"loading\">Save Changes</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- content-wrapper ends -->\r\n            <!-- partial:partials/_footer.html -->\r\n            <footer class=\"footer\">\r\n                <div class=\"container-fluid clearfix\">\r\n                    <span class=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © 2020. All\r\n                        rights reserved.</span>\r\n                    <span class=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i\r\n                            class=\"mdi mdi-heart text-danger\"></i>\r\n                    </span>\r\n                </div>\r\n            </footer>\r\n            <!-- partial -->\r\n        </div>\r\n        <!-- main-panel ends -->\r\n    </div>\r\n    <!-- page-body-wrapper ends -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-agent',\r\n  templateUrl: './agent.component.html',\r\n  styleUrls: ['./agent.component.css']\r\n})\r\nexport class AgentComponent implements OnInit {\r\n\r\n  credentialsForm: FormGroup;\r\n  title = \"Login\";\r\n\r\n  constructor(private router: Router) { \r\n  \t\r\n  }\r\n\r\n   register() {\r\n  \tthis.title = \"Please wait....\";\r\n    console.log(this.credentialsForm);\r\n   }\r\n\r\n   ngOnInit(): void {\r\n     this.credentialsForm = new FormGroup({\r\n       email :  new FormControl(null, [Validators.required]),\r\n       password : new FormControl(null, [Validators.required])\r\n     });\r\n  }\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n      <div class=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n        <div class=\"content-wrapper d-flex align-items-center auth auth-bg-1 theme-one\">\r\n          <div class=\"row w-100\">\r\n            <div class=\"col-lg-4 mx-auto\">\r\n              <div class=\"auto-form-wrapper\">\r\n                <form [formGroup]=\"credentialsForm\" (Submit)=\"register()\">\r\n                  <div class=\"form-group\">\r\n                    <label class=\"label\">Email</label>\r\n                    <div class=\"input-group\">\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Username or Email\" formControlName=\"email\">\r\n                      <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text\">\r\n                          <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <div *ngIf=\"!credentialsForm.controls.name.valid &&\r\n\t\t\t\t\t\t    credentialsForm.controls.name.dirty\"\r\n\t\t\t\t\t\t    class=\"validator-error\">\r\n\t\t\t\t\t\t<p>Enter a valid Email</p>\r\n\t\t\t\t\t  </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <label class=\"label\">Password</label>\r\n                    <div class=\"input-group\">\r\n                      <input type=\"password\" class=\"form-control\" placeholder=\"*********\" formControlName=\"password\">\r\n                      <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text\">\r\n                          <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <div *ngIf=\"!credentialsForm.controls.password.valid &&\r\n\t\t\t\t\t\t    credentialsForm.controls.password.dirty\"\r\n\t\t\t\t\t\t    class=\"validator-error\">\r\n\t\t\t\t\t\t<p>Enter a valid password</p>\r\n\t\t\t\t\t  </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <button [disabled]=\"!credentialsForm.valid\" class=\"btn btn-primary submit-btn btn-block\" type=\"submit\" (click)=\"register()\">{{ title }}</button>\r\n                  </div>\r\n                  <div class=\"form-group d-flex justify-content-between\">\r\n                    <div class=\"form-check form-check-flat mt-0\">\r\n                      <a routerLink=\"/forgot-password\">Forgot Password</a>\r\n                    </div>\r\n                    <!-- <a href=\"#\" class=\"text-small forgot-password text-black\">Forgot Password</a> -->\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- content-wrapper ends -->\r\n      </div>\r\n      <!-- page-body-wrapper ends -->\r\n    </div>","import { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from '../shared/users.model';\r\nimport { BehaviorSubject, } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nconst BACKEND_URL = environment.apiUrl;\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\n\r\nexport class AgentService {\r\n    private users: User[] = [];\r\n    private userStatusListener = new BehaviorSubject<User[]>([]);\r\n    constructor(private http: HttpClient, private router: Router) { }\r\n\r\n    getUserStatusListener() {\r\n        return this.userStatusListener.asObservable();\r\n    }\r\n\r\n    createUser(user: User) {\r\n        // const postCredentials = new FormData();\r\n        // postCredentials.append('firstname', user.firstname);\r\n        // postCredentials.append('middlename', user.middlename);\r\n        // postCredentials.append('lastname', user.lastname);\r\n        // postCredentials.append('email', user.email);\r\n        // postCredentials.append('gender', user.gender);\r\n        // postCredentials.append('dob', user.dob);\r\n        // postCredentials.append('zone', user.zone);\r\n        // postCredentials.append('unit', user.unit);\r\n        // postCredentials.append('phone_no', user.phone_no);\r\n        // postCredentials.append('state', user.state);\r\n        // postCredentials.append('vehicle_no', user.vehicle_no);\r\n        // postCredentials.append('password', user.password);\r\n        // postCredentials.append('image', user.image);\r\n        // postCredentials.append('fingerprint_thumb', user.fingerprint_thumb);\r\n        // postCredentials.append('fingerprint_index', user.firstname);\r\n        // console.log(postCredentials.get(\"image\"));\r\n        // console.log(postData);\r\n        this.http.post<{ user: User }>(BACKEND_URL + 'agent/user', user)\r\n            .subscribe(responseData => {\r\n                this.users.push(responseData.user);\r\n                this.userStatusListener.next(this.users);\r\n                this.router.navigateByUrl('/agent/dashboard');\r\n            });\r\n    }\r\n\r\n    getUsers() {\r\n        this.http.get<{ users: User[] }>(BACKEND_URL + 'agent/user')\r\n            .subscribe(responseData => {\r\n                this.users = responseData.users;\r\n                this.userStatusListener.next(this.users);\r\n            });\r\n    }\r\n\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AgentService } from '../agent.service';\r\nimport { Subject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { WebcamImage, WebcamInitError, WebcamUtil } from 'ngx-webcam';\r\nimport { externalParameters } from './state-file';\r\nimport { Agent } from 'src/app/shared/agent.model';\r\nconst stateRecord = externalParameters.states;\r\n@Component({\r\n  selector: 'app-capture',\r\n  templateUrl: './capture.component.html',\r\n  styleUrls: ['./capture.component.css']\r\n})\r\nexport class CaptureComponent implements OnInit {\r\n  agentForm : FormGroup;\r\n  states : string[] = stateRecord;\r\n  userInformation : Agent;\r\n  title: string = \"Take Picture\";\r\n  // toggle webcam on/off\r\n  public showWebcam = false;\r\n  public allowCameraSwitch = true;\r\n  public multipleWebcamsAvailable = false;\r\n  public deviceId: string;\r\n  public videoOptions: MediaTrackConstraints = {\r\n    // width: {ideal: 1024},\r\n    // height: {ideal: 576}\r\n  };\r\n  public errors: WebcamInitError[] = [];\r\n\r\n  // latest snapshot\r\n  public webcamImage: WebcamImage = null;\r\n\r\n  // webcam snapshot trigger\r\n  private trigger: Subject<void> = new Subject<void>();\r\n  // switch to next / previous / specific webcam; true/false: forward/backwards, string: deviceId\r\n  private nextWebcam: Subject<boolean|string> = new Subject<boolean|string>();\r\n\r\n  public triggerSnapshot(): void {\r\n    this.trigger.next();\r\n    this.toggleWebcam();\r\n  }\r\n\r\n  toggleWebcam() {\r\n    this.showWebcam = !this.showWebcam;\r\n    if (this.showWebcam == true) {\r\n     this.title = \"Switch Camera Off\";\r\n    }\r\n    else {\r\n      this.title = \"Take Picture\";\r\n    }\r\n  }\r\n\r\n\r\n  public handleInitError(error: WebcamInitError): void {\r\n    this.errors.push(error);\r\n  }\r\n\r\n  public showNextWebcam(directionOrDeviceId: boolean|string): void {\r\n    this.nextWebcam.next(directionOrDeviceId);\r\n  }\r\n\r\n  public handleImage(webcamImage: WebcamImage): void {\r\n    this.webcamImage = webcamImage;\r\n    this.showWebcam = !this.showWebcam;\r\n  }\r\n\r\n  public cameraWasSwitched(deviceId: string): void {\r\n    console.log('active device: ' + deviceId);\r\n    this.deviceId = deviceId;\r\n  }\r\n\r\n  public get triggerObservable(): Observable<void> {\r\n    return this.trigger.asObservable();\r\n  }\r\n\r\n  public get nextWebcamObservable(): Observable<boolean|string> {\r\n    return this.nextWebcam.asObservable();\r\n  }\r\n  constructor(private agentService : AgentService, private authService : AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    WebcamUtil.getAvailableVideoInputs()\r\n      .then((mediaDevices: MediaDeviceInfo[]) => {\r\n        this.multipleWebcamsAvailable = mediaDevices && mediaDevices.length > 1;\r\n      });\r\n    this.init();\r\n    this.authService.getAgentDataStatus()\r\n    .subscribe(responseData => {\r\n      this.userInformation = responseData;\r\n    });\r\n  }\r\n\r\n  private init() {\r\n    this.agentForm = new FormGroup({\r\n      firstname : new FormControl(null, [Validators.required]),\r\n      middlename : new FormControl(null, [Validators.required]),\r\n      lastname : new FormControl(null),\r\n      email : new FormControl(null, [Validators.required, Validators.email]),\r\n      gender : new FormControl(null, [Validators.required]),\r\n      dob : new FormControl(null, [Validators.required]),\r\n      zone : new FormControl(null, [Validators.required]),\r\n      unit : new FormControl(null, [Validators.required]),\r\n      phone_no : new FormControl(null, [Validators.required, Validators.pattern(/^[0-9]+[0-9]*$/)]),\r\n      state : new FormControl(null, [Validators.required]),\r\n      vehicle_no : new FormControl(null, [Validators.required]),\r\n      image : new FormControl(null),\r\n      fingerprint_thumb : new FormControl(null),\r\n      fingerprint_index : new FormControl(null)\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.agentForm.value.image = this.webcamImage.imageAsDataUrl;\r\n    if(!this.agentForm.valid && this.agentForm.value.image === null) {\r\n      return;\r\n    }\r\n    \r\n    this.agentService.createUser(this.agentForm.value);\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n      <!-- partial:partials/_navbar.html -->\r\n      <nav class=\"navbar default-layout col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n        <div class=\"text-center navbar-brand-wrapper d-flex align-items-top justify-content-center\">\r\n          <a class=\"navbar-brand brand-logo\" href=\"index.html\">\r\n            Card System </a>\r\n          <a class=\"navbar-brand brand-logo-mini\" href=\"index.html\">\r\n            Card System </a>\r\n        </div>\r\n        <div class=\"navbar-menu-wrapper d-flex align-items-center\">\r\n          <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item dropdown d-none d-xl-inline-block user-dropdown\">\r\n              <a class=\"nav-link dropdown-toggle\" id=\"UserDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <img class=\"img-xs rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"Profile image\"> </a>\r\n              <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\">\r\n                <div class=\"dropdown-header text-center\">\r\n                  <img class=\"img-md rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"Profile image\">\r\n                  <p class=\"mb-1 mt-3 font-weight-semibold\">{{userInformation?.name}}</p>\r\n                  <p class=\"font-weight-light text-muted mb-0\">Agent</p>\r\n                </div>\r\n                <a class=\"dropdown-item\" routerLink=\"/agent/profile\">My Profile <i class=\"dropdown-item-icon ti-dashboard\"></i></a>\r\n                <a class=\"dropdown-item\" style=\"cursor: pointer;\" (click)=\"logout()\">Sign Out<i class=\"dropdown-item-icon ti-power-off\"></i></a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n            <span class=\"mdi mdi-menu\"></span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <!-- partial -->\r\n      <div class=\"container-fluid page-body-wrapper\">\r\n        <!-- partial:partials/_sidebar.html -->\r\n        <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n          <ul class=\"nav\">\r\n            <li class=\"nav-item nav-profile\">\r\n              <a href=\"#\" class=\"nav-link\">\r\n                <div class=\"profile-image\">\r\n                  <img class=\"img-xs rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"profile image\">\r\n                  <div class=\"dot-indicator bg-success\"></div>\r\n                </div>\r\n                <div class=\"text-wrapper\">\r\n                  <p class=\"profile-name\">{{userInformation?.name}}</p>\r\n                  <p class=\"designation\">Agent</p>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item nav-category\">Main Menu</li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/agent/dashboard\">\r\n                <i class=\"menu-icon typcn typcn-document-text\"></i>\r\n                <span class=\"menu-title\">Dashboard</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" routerLink=\"/agent/capture\">\r\n                <i class=\"menu-icon typcn typcn-th-large-outline\"></i>\r\n                <span class=\"menu-title\">Add Bio-data</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/agent/profile\">\r\n                <i class=\"menu-icon typcn typcn-bell\"></i>\r\n                <span class=\"menu-title\">Profile</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <!-- partial -->\r\n        <div class=\"main-panel\">\r\n          <div class=\"content-wrapper\">\r\n            <!-- Page Title Header Starts-->\r\n            <div class=\"row page-title-header\">\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n              <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\" role=\"document\">\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Profile</h5>\r\n                          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                          </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                          ...\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n              <div class=\"col-12 grid-margin\">\r\n                <div class=\"card\">\r\n                  <div class=\"card-body\">\r\n                    <h4 class=\"card-title\">Bio Data Registration</h4>\r\n                    <form [formGroup] = \"agentForm\" (ngSubmit) = \"onSubmit()\" class=\"form-sample\">\r\n                      <webcam [height]=\"500\" [width]=\"500\" [trigger]=\"triggerObservable\" \r\n                  (imageCapture)=\"handleImage($event)\" *ngIf=\"showWebcam\"\r\n                  [allowCameraSwitch]=\"allowCameraSwitch\" [switchCamera]=\"nextWebcamObservable\" [videoOptions]=\"videoOptions\" (cameraSwitched)=\"cameraWasSwitched($event)\"\r\n                  (initError)=\"handleInitError($event)\"></webcam>\r\n                      <p class=\"card-description\"> Personal info </p>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">First Name</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <input formControlName = \"firstname\" type=\"text\" class=\"form-control\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">MIddle Name</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <input formControlName = \"middlename\" type=\"text\" class=\"form-control\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">Last Name</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <input formControlName = \"lastname\" type=\"text\" class=\"form-control\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">Email</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <input formControlName = \"email\" type=\"text\" class=\"form-control\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">Gender</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <select  formControlName = \"gender\" class=\"form-control\">\r\n                                <option>Male</option>\r\n                                <option>Female</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">Date of Birth</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <input type=\"text\"  formControlName = \"dob\" class=\"form-control\" placeholder=\"dd/mm/yyyy\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">Zone</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <select  formControlName = \"zone\" class=\"form-control\">\r\n                                <option>Category1</option>\r\n                                <option>Category2</option>\r\n                                <option>Category3</option>\r\n                                <option>Category4</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">Unit</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <input formControlName = \"unit\" type=\"text\" class=\"form-control\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">Phone</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <input  formControlName = \"phone_no\" type=\"text\" class=\"form-control\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">State</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <select  formControlName = \"state\" class=\"form-control\">\r\n                                <option></option>\r\n                                <option *ngFor=\"let state of states\">{{ state }}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">Vehicle Number</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <input type=\"text\" formControlName = \"vehicle_no\" class=\"form-control\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">Passport</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <button class=\"btn btn-secondary\" color=\"basic\" type=\"button\" (click)=\"triggerSnapshot()\" *ngIf=\"showWebcam\">Capture</button>\r\n                                 &nbsp;\r\n                              <button class=\"btn btn-secondary\" color=\"basic\" type=\"button\" (click)=\"toggleWebcam()\">{{ title }}</button>\r\n                              <!-- <input  formControlName = \"image\" type=\"file\" class=\"form-control\"> -->\r\n                            </div>\r\n                            <div class=\"image-preview\" *ngIf = \"webcamImage\">\r\n                              <img\r\n                              [src]=\"webcamImage.imageAsDataUrl\"\r\n                              alt=\"agentForm.value.title\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">Fingerprint Thumb</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <input  formControlName = \"fingerprint_thumb\" type=\"file\" class=\"form-control\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                          <div class=\"form-group row\">\r\n                            <label class=\"col-sm-3 col-form-label\">Fingerprint Index</label>\r\n                            <div class=\"col-sm-9\">\r\n                              <input formControlName = \"fingerprint_index\" type=\"file\" class=\"form-control\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <button [disabled]= \"!agentForm.valid\"  type=\"submit\" class=\"btn btn-primary\">Save Data</button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <!-- content-wrapper ends -->\r\n          <!-- partial:partials/_footer.html -->\r\n          <footer class=\"footer\">\r\n            <div class=\"container-fluid clearfix\">\r\n              <span class=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © 2020. All rights reserved.</span>\r\n              <span class=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i class=\"mdi mdi-heart text-danger\"></i>\r\n              </span>\r\n            </div>\r\n          </footer>\r\n          <!-- partial -->\r\n        </div>\r\n        <!-- main-panel ends -->\r\n      </div>\r\n      <!-- page-body-wrapper ends -->\r\n    </div>","export const externalParameters = {\r\n    states : [\r\n        \"Abia\",\r\n        \"Adamawa\",\r\n        \"Anambra\",\r\n        \"Akwa Ibom\",\r\n        \"Bauchi\",\r\n        \"Bayelsa\",\r\n        \"Benue\",\r\n        \"Borno\",\r\n        \"Cross River\",\r\n        \"Delta\",\r\n        \"Ebonyi\",\r\n        \"Enugu\",\r\n        \"Edo\",\r\n        \"Ekiti\",\r\n        \"FCT - Abuja\",\r\n        \"Gombe\",\r\n        \"Imo\",\r\n        \"Jigawa\",\r\n        \"Kaduna\",\r\n        \"Kano\",\r\n        \"Katsina\",\r\n        \"Kebbi\",\r\n        \"Kogi\",\r\n        \"Kwara\",\r\n        \"Lagos\",\r\n        \"Nasarawa\",\r\n        \"Niger\",\r\n        \"Ogun\",\r\n        \"Ondo\",\r\n        \"Osun\",\r\n        \"Oyo\",\r\n        \"Plateau\",\r\n        \"Rivers\",\r\n        \"Sokoto\",\r\n        \"Taraba\",\r\n        \"Yobe\",\r\n        \"Zamfara\"\r\n      ]\r\n};","import { NgModule } from '@angular/core';\r\nimport {\r\n    MatDialogModule\r\n} from '@angular/material/dialog';\r\n\r\nimport {\r\n    MatProgressSpinnerModule\r\n} from '@angular/material/progress-spinner';\r\n\r\nimport {\r\n    MatButtonModule\r\n} from '@angular/material/button';\r\nimport {\r\n    MatInputModule\r\n} from '@angular/material/input';\r\n\r\nimport { \r\n\tMatTableModule\r\n\t } from '@angular/material/table';\r\n\r\nimport { \r\n\tMatToolbarModule \r\n} from '@angular/material/toolbar';\r\n\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\n@NgModule({\r\n    exports: [\r\n        MatProgressSpinnerModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatTableModule,\r\n        MatToolbarModule,\r\n        MatPaginatorModule,\r\n        MatSortModule\r\n\r\n    ]\r\n})\r\nexport class AngularMaterialModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { DashboardPageComponent } from './admin/dashboard-page/dashboard-page.component';\r\nimport { AddAgentComponent } from './admin/add-agent/add-agent.component';\r\nimport { AgentDashboardComponent } from './agent/agent-dashboard/agent-dashboard.component';\r\nimport { CaptureComponent } from './agent/capture/capture.component';\r\nimport { AdminLoginComponent } from './auth/admin/login/login.component';\r\nimport { AgentLoginComponent } from './auth/agent/login/login.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AdminAuthGuard } from './auth/admin.auth.guard';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { AdminProfileComponent } from './admin/admin-profile/admin-profile.component';\r\nimport { AgentProfileComponent } from './agent/agent-profile/agent-profile.component';\r\nimport { UserAuthGuard } from './auth/user.auth.guard';\r\nimport { ForgotPasswordComponent } from './auth/login/forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from './auth/login/reset-password/reset-password.component';\r\nimport { AgentForgotPasswordComponent } from './auth/agent/agent-forgot-password/agent-forgot-password.component';\r\nimport { AgentResetPasswordComponent } from './auth/agent/agent-reset-password/agent-reset-password.component';\r\nimport {ViewComponent } from './admin/view/view.component';\r\n\r\nconst routes: Routes = [\r\n  {path:  \"\", pathMatch:  \"full\",redirectTo:  \"home\"},\r\n  {path: \"agent\", redirectTo: 'agent/dashboard'},\r\n  {path: \"home\", canActivate: [UserAuthGuard], component: HomeComponent},\r\n  {path: \"admin\", redirectTo: 'admin/dashboard'},\r\n  {path: \"dashboard\", canActivate: [UserAuthGuard], component:DashboardComponent},\r\n  {path: \"admin/login\", component:AdminLoginComponent},\r\n  {path: \"agent/login\", component:AgentLoginComponent},\r\n  {path: \"admin/dashboard\", canActivate: [AdminAuthGuard], component:DashboardPageComponent},\r\n  {path: \"agent/dashboard\", canActivate: [AuthGuard], component:AgentDashboardComponent},\r\n  {path: \"agent/capture\", canActivate: [AuthGuard], component:CaptureComponent},\r\n  {path: \"admin/add-agent\", canActivate: [AdminAuthGuard], component:AddAgentComponent},\r\n  {path: \"login\", component: LoginComponent},\r\n  {path: \"profile\", canActivate: [UserAuthGuard], component: ProfileComponent},\r\n  {path: \"agent/profile\", canActivate: [AuthGuard], component: AgentProfileComponent},\r\n  {path: \"admin/profile\", canActivate: [AdminAuthGuard], component: AdminProfileComponent},\r\n  {path: \"forgot-password\", component: ForgotPasswordComponent},\r\n  {path: \"reset/:token\", component : ResetPasswordComponent},\r\n  {path: \"agent/forgot-password\", component : AgentForgotPasswordComponent},\r\n  {path: \"agent/reset/:token\", component: AgentResetPasswordComponent},\r\n  {path: \"admin/view-agent\", component: ViewComponent}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AdminAuthService } from './auth/admin.auth.service';\r\nimport { UserAuthService } from './auth/user.auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'ecard-system';\r\n  constructor(private userAuthService: UserAuthService,private authService: AuthService, private adminAuthService: AdminAuthService) {}\r\n  ngOnInit() {\r\n    this.userAuthService.autoAuthUser();\r\n    this.authService.autoAuthUser();\r\n    this.adminAuthService.autoAuthAdmin();\r\n    if (this.userAuthService.getUserAuthStatus()) { this.userAuthService.getUserData(); }\r\n\r\n    if (this.authService.getAuthStatus()) { this.authService.getAgentData(); }\r\n  }\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { AgentComponent } from './agent/agent.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { DashboardPageComponent } from './admin/dashboard-page/dashboard-page.component';\r\nimport { AddAgentComponent } from './admin/add-agent/add-agent.component';\r\nimport { CaptureComponent } from './agent/capture/capture.component';\r\nimport { AgentDashboardComponent } from './agent/agent-dashboard/agent-dashboard.component';\r\nimport { AdminProfileComponent } from './admin/admin-profile/admin-profile.component';\r\nimport { AgentProfileComponent } from './agent/agent-profile/agent-profile.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AdminLoginComponent } from './auth/admin/login/login.component';\r\nimport { AgentLoginComponent } from './auth/agent/login/login.component';\r\nimport { AuthInterceptor } from './auth/auth.interceptor';\r\nimport { CardBackComponent } from './card-back/card-back.component';\r\nimport { CardComponent } from './card/card.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { LoadingSpinnerComponent } from './shared/loading-spinner/loading-spinner.component';\r\nimport { ErrorInterceptorService } from './error-interceptor.service';\r\nimport { WebcamModule } from 'ngx-webcam';\r\nimport { AgentForgotPasswordComponent } from './auth/agent/agent-forgot-password/agent-forgot-password.component';\r\nimport { AgentResetPasswordComponent } from './auth/agent/agent-reset-password/agent-reset-password.component';\r\nimport { ResetPasswordComponent } from './auth/login/reset-password/reset-password.component';\r\nimport { ForgotPasswordComponent } from './auth/login/forgot-password/forgot-password.component';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { ViewComponent } from './admin/view/view.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    SidebarComponent,\r\n    ProfileComponent,\r\n    AgentComponent,\r\n    AdminComponent,\r\n    LoginComponent,\r\n    UserComponent,\r\n    DashboardComponent,\r\n    FooterComponent,\r\n    DashboardPageComponent,\r\n    AddAgentComponent,\r\n    CaptureComponent,\r\n    AgentDashboardComponent,\r\n    AdminProfileComponent,\r\n    AgentProfileComponent,\r\n    AdminLoginComponent,\r\n    AgentLoginComponent,\r\n    CardBackComponent,\r\n    CardComponent,\r\n    ErrorComponent,\r\n    LoadingSpinnerComponent,\r\n    ResetPasswordComponent,\r\n    ForgotPasswordComponent,\r\n    AgentForgotPasswordComponent,\r\n    AgentResetPasswordComponent,\r\n    ViewComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularMaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    WebcamModule,\r\n    BrowserAnimationsModule,\r\n\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptorService, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents : [ErrorComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AdminAuthService } from './admin.auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AdminAuthGuard implements CanActivate {\r\n  constructor(private adminAuthService : AdminAuthService, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.adminAuthService.getAdminAuthStatus();\r\n    if(!isAuth) {\r\n      return this.router.navigate(['/admin', 'login']);\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { Auth } from './auth.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { tap } from 'rxjs/operators';\r\nconst BACKEND_URL = environment.apiUrl;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AdminAuthService {\r\n  token: string;\r\n  private tokenTimer: any;\r\n  private isAuthenticated = false;\r\n  getAuthStatusListener = new BehaviorSubject<boolean>(false);\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  login(user: Auth) {\r\n    return this.http.post<{ token: string, expiresIn: string }>(BACKEND_URL + 'admin/login', user)\r\n    .pipe(tap(responseData => this.onHandleAuthentication(responseData)));\r\n  }\r\n  private onHandleAuthentication(responseData: { token: string, expiresIn: string }) {\r\n    const token = responseData.token;\r\n    if (token) {\r\n      this.token = token;\r\n      const expiresIn = responseData.expiresIn;\r\n      this.isAuthenticated = true;\r\n      this.getAuthStatusListener.next(true);\r\n      this.setTokenTimer(expiresIn);\r\n      const dateNow = new Date();\r\n      const expirationDate = new Date(dateNow.getTime() + +expiresIn * 1000);\r\n      this.saveAuthData(token, expirationDate);\r\n    }\r\n  }\r\n  getAdminAuthStatus() {\r\n    return this.isAuthenticated;\r\n  }\r\n  getAuthStatusEventListener() {\r\n    return this.getAuthStatusListener.asObservable();\r\n  }\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n  private setTokenTimer(expiresIn) {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, expiresIn * 1000);\r\n  }\r\n\r\n  autoAuthAdmin() {\r\n    const authInformation = this.getAuthData();\r\n\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const currentDate = new Date();\r\n    const expiresIn = authInformation.expiresIn.getTime() - currentDate.getTime();\r\n\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.getAuthStatusListener.next(true);\r\n      this.setTokenTimer(expiresIn / 1000);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.getAuthStatusListener.next(false);\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    this.router.navigateByUrl('/admin/login');\r\n  }\r\n\r\n  private saveAuthData(token: string, expiresIn: Date) {\r\n    localStorage.setItem('adminToken', token);\r\n    localStorage.setItem('adminExpiresIn', expiresIn.toISOString());\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem('adminToken');\r\n    const expiresInDuration = localStorage.getItem('adminExpiresIn');\r\n    if (!token || !expiresInDuration) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expiresIn: new Date(expiresInDuration)\r\n    };\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem('adminToken');\r\n    localStorage.removeItem('adminExpiresIn');\r\n  }\r\n  changeProfile(password: string, newpassword: string, confirmpassword: string) {\r\n    const postData = {\r\n      password: password,\r\n      newpassword: newpassword,\r\n      confirmpassword: confirmpassword\r\n    }\r\n    return this.http.post<{ message: string }>(BACKEND_URL + 'admin/profile', postData);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AdminAuthService } from '../../admin.auth.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-admin-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class AdminLoginComponent implements OnInit {\r\n  credentialsForm: FormGroup;\r\n  title = \"Login\";\r\n  loading: boolean = false;\r\n  constructor(private router: Router, private adminAuthService: AdminAuthService) { }\r\n  ngOnInit(): void {\r\n    this.adminAuthService.autoAuthAdmin();\r\n    if (this.adminAuthService.getAdminAuthStatus()) {\r\n      this.router.navigateByUrl('/admin');\r\n    }\r\n    this.credentialsForm = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      password: new FormControl(null, [Validators.required])\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.title = \"Please wait....\";\r\n    if (!this.credentialsForm.valid) {\r\n      this.title = \"Login\"\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.adminAuthService.login(this.credentialsForm.value)\r\n      .pipe(finalize(() => {\r\n        this.title = \"Login\";\r\n        this.loading = false;\r\n      }))\r\n      .subscribe(responseData => {\r\n        this.router.navigateByUrl('/admin');\r\n        this.credentialsForm.reset();\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n  <div class=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n    <div class=\"content-wrapper d-flex align-items-center auth auth-bg-1 theme-one\">\r\n      <div class=\"row w-100\">\r\n        <div class=\"col-lg-4 mx-auto\">\r\n          <div class=\"auto-form-wrapper\">\r\n            <form [formGroup]=\"credentialsForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"form-group\">\r\n                <label class=\"label\">Email</label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\">\r\n                  <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <div *ngIf=\"!credentialsForm.controls.email.valid &&\r\n            credentialsForm.controls.email.dirty\"\r\n            class=\"validator-error\">\r\n        <p>Enter a valid Email</p>\r\n        </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"label\">Password</label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"password\" class=\"form-control\" placeholder=\"*********\" formControlName=\"password\">\r\n                  <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <div *ngIf=\"!credentialsForm.controls.password.valid &&\r\n            credentialsForm.controls.password.dirty\"\r\n            class=\"validator-error\">\r\n        <p>Enter a valid password</p>\r\n        </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button [disabled]=\"!credentialsForm.valid\" class=\"btn btn-primary submit-btn btn-block\" [class.spinner]=\"loading\" [disabled]=\"loading\" type=\"submit\">{{ title }}</button>\r\n              </div>\r\n              <div class=\"form-group d-flex justify-content-between\">\r\n                <div class=\"form-check form-check-flat mt-0\">\r\n                  <label class=\"form-check-label\">\r\n                    <input type=\"checkbox\" class=\"form-check-input\" checked> Keep me signed in </label>\r\n                </div>\r\n                <!-- <a href=\"#\" class=\"text-small forgot-password text-black\">Forgot Password</a> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- content-wrapper ends -->\r\n  </div>\r\n  <!-- page-body-wrapper ends -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Location } from '@angular/common';\r\nimport { AuthService } from '../../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-agent-forgot-password',\r\n  templateUrl: './agent-forgot-password.component.html',\r\n  styleUrls: ['./agent-forgot-password.component.css']\r\n})\r\nexport class AgentForgotPasswordComponent implements OnInit {\r\n  credentialsForm: FormGroup;\r\n  title = \"Submit\";\r\n  loading = false;\r\n  message: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _location: Location,\r\n    private authService: AuthService\r\n  ) {\r\n    this.credentialsForm = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  backClicked() {\r\n    this._location.back();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.title = \"Please wait....\";\r\n    if (!this.credentialsForm.valid) {\r\n\r\n      return;\r\n    }\r\n    this.loading = true;\r\n\r\n    this.authService.forgotPassword(this.credentialsForm.value.email)\r\n      .subscribe(responseData => {\r\n        this.loading = false;\r\n        this.credentialsForm.reset();\r\n        this.message = responseData.message;\r\n        this.title = \"Submit\";\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n  <div class=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n    <div class=\"content-wrapper d-flex align-items-center auth auth-bg-1 theme-one\">\r\n      <div class=\"row w-100\">\r\n        \r\n        <div class=\"col-lg-4 mx-auto\">\r\n          <div class=\"auto-form-wrapper\">\r\n            <div class=\"col-lg-4 mx-auto\" *ngIf= \"message !== null\">\r\n              <p>{{ message }}</p>\r\n            </div>\r\n            <form [formGroup]=\"credentialsForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"form-group\">\r\n                <label class=\"label\">Email</label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\">\r\n                  <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <div *ngIf=\"!credentialsForm.controls.email.valid &&\r\n            credentialsForm.controls.email.dirty\"\r\n            class=\"validator-error\">\r\n        <p>Enter a valid Email</p>\r\n        </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button [disabled]=\"!credentialsForm.valid\" class=\"btn btn-primary submit-btn btn-block\" type=\"submit\">{{ title }}</button>\r\n              </div>\r\n              <div class=\"form-group d-flex justify-content-between\">\r\n                <div class=\"form-check form-check-flat mt-0\">\r\n                  <a (click)=\"backClicked()\" class=\"text-black cursor\">Go Back</a>\r\n                </div>\r\n                <!-- <a href=\"#\" class=\"text-small forgot-password text-black\">Forgot Password</a> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- content-wrapper ends -->\r\n  </div>\r\n  <!-- page-body-wrapper ends -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../auth.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-agent-reset-password',\r\n  templateUrl: './agent-reset-password.component.html',\r\n  styleUrls: ['./agent-reset-password.component.css']\r\n})\r\nexport class AgentResetPasswordComponent implements OnInit {\r\n  title = \"Submit\";\r\n  token : string;\r\n  agentId : string;\r\n  loading = false;\r\n  message : string;\r\n  credentialsForm : FormGroup;\r\n  constructor(\r\n    private route : ActivatedRoute,\r\n    private authService : AuthService,\r\n    private router : Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n    this.loading =true\r\n    this.route.params.subscribe(\r\n      (params : Params) => {\r\n        if(params['token']) {\r\n          this.token = params['token'];\r\n          this.authService.getResetPassword(this.token)\r\n          .subscribe(responseData => {\r\n            this.loading = false;\r\n            this.agentId= responseData.agentId;\r\n          }, error => {\r\n            this.router.navigateByUrl('/agent');\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private init() {\r\n    this.credentialsForm = new FormGroup({\r\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)]),\r\n      confirmpassword : new FormControl(null, [Validators.required])\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if(!this.credentialsForm.valid) {\r\n      return;\r\n    }\r\n    if(this.credentialsForm.value.password !== this.credentialsForm.value.confirmpassword) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    const password = this.credentialsForm.value.password;\r\n    const confirmpassword = this.credentialsForm.value.confirmpassword;\r\n    this.authService.postResetPassword(password, confirmpassword, this.token, this.agentId)\r\n    .subscribe(responseData => {\r\n      this.message = responseData.message;\r\n      this.loading = false;\r\n      this.router.navigateByUrl('agent/login');\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n    <div class=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n        <div class=\"content-wrapper d-flex align-items-center auth auth-bg-1 theme-one\">\r\n            <div class=\"row w-100\">\r\n                <div class=\"col-lg-4 mx-auto\">\r\n                    <div class=\"auto-form-wrapper\">\r\n                        <form [formGroup]=\"credentialsForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\">Password</label>\r\n                                <div class=\"input-group\">\r\n                                    <input type=\"password\" class=\"form-control\" placeholder=\"*********\"\r\n                                        formControlName=\"password\">\r\n                                    <div class=\"input-group-append\">\r\n                                        <span class=\"input-group-text\">\r\n                                            <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div *ngIf=\"!credentialsForm.controls.password.valid &&\r\n              credentialsForm.controls.password.dirty\" class=\"validator-error\">\r\n                                        <p>Enter a valid password</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\"> Confirm Password</label>\r\n                                <div class=\"input-group\">\r\n                                    <input type=\"password\" class=\"form-control\" placeholder=\"*********\"\r\n                                        formControlName=\"confirmpassword\">\r\n                                    <div class=\"input-group-append\">\r\n                                        <span class=\"input-group-text\">\r\n                                            <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div *ngIf=\"!credentialsForm.controls.confirmpassword.valid &&\r\n              credentialsForm.controls.confirmpassword.dirty\" class=\"validator-error\">\r\n                                        <p>Password does not match</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <button [disabled]=\"!credentialsForm.valid\" class=\"btn btn-primary submit-btn btn-block\"\r\n                                    [class.spinner]=\"loading\"  type=\"submit\">{{ title }}</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- content-wrapper ends -->\r\n    </div>\r\n    <!-- page-body-wrapper ends -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../auth.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-agent-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class AgentLoginComponent implements OnInit {\r\n  credentialsForm: FormGroup;\r\n  title = \"Login\";\r\n  loading: boolean = false;\r\n\r\n  constructor(private router: Router, private authService : AuthService) {}\r\n  ngOnInit(): void {\r\n    this.authService.autoAuthUser();\r\n    if(this.authService.getAuthStatus()) {\r\n      this.router.navigateByUrl('/agent');\r\n    }\r\n    this.credentialsForm = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      password: new FormControl(null, [Validators.required])\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.title = \"Please wait....\";\r\n    if (!this.credentialsForm.valid) {\r\n      this.title = \"Login\"\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.authService.login(this.credentialsForm.value)\r\n    .pipe(finalize(() => {\r\n      this.loading= false;\r\n      this.title = \"Login\";\r\n    }))\r\n    .subscribe(responseData => {\r\n      this.router.navigateByUrl('/agent/dashboard');\r\n      this.credentialsForm.reset();\r\n    });\r\n  }\r\n\r\n  \r\n}\r\n","<div class=\"container-scroller\">\r\n  <div class=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n    <div class=\"content-wrapper d-flex align-items-center auth auth-bg-1 theme-one\">\r\n      <div class=\"row w-100\">\r\n        <div class=\"col-lg-4 mx-auto\">\r\n          <div class=\"auto-form-wrapper\">\r\n            <form [formGroup]=\"credentialsForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"form-group\">\r\n                <label class=\"label\">Email</label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\">\r\n                  <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <div *ngIf=\"!credentialsForm.controls.email.valid &&\r\n            credentialsForm.controls.email.dirty\"\r\n            class=\"validator-error\">\r\n        <p>Enter a valid Email</p>\r\n        </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"label\">Password</label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"password\" class=\"form-control\" placeholder=\"*********\" formControlName=\"password\">\r\n                  <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <div *ngIf=\"!credentialsForm.controls.password.valid &&\r\n            credentialsForm.controls.password.dirty\"\r\n            class=\"validator-error\">\r\n        <p>Enter a valid password</p>\r\n        </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button [disabled]=\"!credentialsForm.valid\" class=\"btn btn-primary submit-btn btn-block\" [class.spinner]=\"loading\" [disabled]=\"loading\" type=\"submit\">{{ title }}</button>\r\n              </div>\r\n              <div class=\"form-group d-flex justify-content-between\">\r\n                <div class=\"form-check form-check-flat mt-0\">\r\n                  <a routerLink=\"/agent/forgot-password\" class=\"text-black\">Forgot Password</a>\r\n                </div>\r\n                <!-- <a href=\"#\" class=\"text-small forgot-password text-black\">Forgot Password</a> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- content-wrapper ends -->\r\n  </div>\r\n  <!-- page-body-wrapper ends -->\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.authService.getAuthStatus();\r\n    if (!isAuth) {\r\n      this.router.navigate(['/agent', 'login']);\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { AdminAuthService } from './admin.auth.service';\r\nimport { UserAuthService } from './user.auth.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private userAuthService : UserAuthService,private authService: AuthService, private adminAuthService: AdminAuthService) {\r\n    // ...\r\n  }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = this.authService.getToken();\r\n    const userToken = this.userAuthService.getToken();\r\n    const adminToken = this.adminAuthService.getToken();\r\n    const authRequest = req.clone({\r\n      headers : new HttpHeaders({\r\n        Authorization: \"Bearer \" + token,\r\n        AdminAuthorization: \"Bearer \" + adminToken,\r\n        UserAuthorization : \"Bearer \" + userToken\r\n      })\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { Auth } from './auth.model';\r\nimport { Agent } from '../shared/agent.model';\r\nimport { tap } from 'rxjs/operators';\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private isAuthenticated: boolean = false;\r\n  private username: string;\r\n  private userimage: string\r\n  agentData = new BehaviorSubject<Agent>(null);\r\n  private authStatusListener = new BehaviorSubject<boolean>(false);\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  getAgentDataStatus() {\r\n    return this.agentData.asObservable();\r\n  }\r\n\r\n  getAgentData() {\r\n    this.http.get<{ agent: Agent }>(BACKEND_URL + 'agent/profile')\r\n      .subscribe(responseData => {\r\n        this.agentData.next(responseData.agent);\r\n      });\r\n  }\r\n\r\n  login(user: Auth) {\r\n    return this.http.post<{ token: any, expiresIn: number, agent: Agent }>(BACKEND_URL + 'agent/login', user)\r\n      .pipe(tap(responseData => this.onHandleAuthentication(responseData)));\r\n  }\r\n\r\n  private onHandleAuthentication(responseData: { token: any, expiresIn: number, agent: Agent }) {\r\n    const token = responseData.token;\r\n    if (token) {\r\n      this.token = token;\r\n      const expiresIn = responseData.expiresIn;\r\n      this.setTimer(expiresIn);\r\n      this.isAuthenticated = true;\r\n      this.authStatusListener.next(true);\r\n      const dateNow = new Date();\r\n      const expirationDate = new Date(dateNow.getTime() + expiresIn * 1000);\r\n      console.log(expirationDate);\r\n      this.saveAuthData(token, expirationDate);\r\n      this.agentData.next(responseData.agent);\r\n    }\r\n  }\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n  getAuthStatus() {\r\n    return this.isAuthenticated;\r\n  }\r\n  private setTimer(expiresIn) {\r\n    console.log('Setting Timer: ' + expiresIn);\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, expiresIn * 1000);\r\n  }\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    this.router.navigate(['/agent', 'login']);\r\n  }\r\n\r\n  // Auto Login\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const currentDateStamp = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - currentDateStamp.getTime();\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.authStatusListener.next(true);\r\n      this.setTimer(expiresIn / 1000)\r\n    }\r\n  }\r\n\r\n  private saveAuthData(token: string, expiresIn: Date) {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expiresIn', expiresIn.toISOString());\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expiresIn');\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem('token');\r\n    const expiresIn = localStorage.getItem('expiresIn');\r\n\r\n    if (!token || !expiresIn) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expirationDate: new Date(expiresIn),\r\n    }\r\n  }\r\n\r\n\r\n  forgotPassword(email: string) {\r\n    const postData = {\r\n      email: email\r\n    }\r\n    return this.http.post<{ message: string }>(BACKEND_URL + 'agent/reset', postData);\r\n  }\r\n\r\n  getResetPassword(token: string) {\r\n    return this.http.get<{ resetToken: string, agentId: string }>(BACKEND_URL + 'agent/reset/' + token);\r\n  }\r\n\r\n  postResetPassword(password: string, confirmpassword: string, token: string, agentId: string) {\r\n    const postData = {\r\n      password: password,\r\n      token: token,\r\n      agentId: agentId\r\n    }\r\n    return this.http.post<{ message: string }>(BACKEND_URL + 'agent/reset/' + token, postData);\r\n  }\r\n\r\n  getProfile() {\r\n    return this.http.get<{ agent: Agent }>(BACKEND_URL + 'agent/profile');\r\n  }\r\n\r\n  changeProfile(agent: Agent) {\r\n    return this.http.post<{ agent: Agent }>(BACKEND_URL + 'agent/profile', agent);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { UserAuthService } from '../../user.auth.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  credentialsForm: FormGroup;\r\n  title = \"Submit\";\r\n  loading = false;\r\n  message: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _location: Location,\r\n    private userAuthController: UserAuthService\r\n  ) {\r\n    this.credentialsForm = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  backClicked() {\r\n    this._location.back();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.title = \"Please wait....\";\r\n    if (!this.credentialsForm.valid) {\r\n\r\n      return;\r\n    }\r\n    this.loading = true;\r\n\r\n    this.userAuthController.forgotPassword(this.credentialsForm.value.email)\r\n      .subscribe(responseData => {\r\n        this.loading = false;\r\n        this.credentialsForm.reset();\r\n        this.message = responseData.message;\r\n        this.title = \"Submit\";\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n  <div class=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n    <div class=\"content-wrapper d-flex align-items-center auth auth-bg-1 theme-one\">\r\n      <div class=\"row w-100\">\r\n        \r\n        <div class=\"col-lg-4 mx-auto\">\r\n          <div class=\"auto-form-wrapper\">\r\n            <div class=\"col-lg-4 mx-auto\" *ngIf= \"message !== null\">\r\n              <p>{{ message }}</p>\r\n            </div>\r\n            <form [formGroup]=\"credentialsForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"form-group\">\r\n                <label class=\"label\">Email</label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\">\r\n                  <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <div *ngIf=\"!credentialsForm.controls.email.valid &&\r\n            credentialsForm.controls.email.dirty\"\r\n            class=\"validator-error\">\r\n        <p>Enter a valid Email</p>\r\n        </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button [disabled]=\"!credentialsForm.valid\" class=\"btn btn-primary submit-btn btn-block\" type=\"submit\">{{ title }}</button>\r\n              </div>\r\n              <div class=\"form-group d-flex justify-content-between\">\r\n                <div class=\"form-check form-check-flat mt-0\">\r\n                  <a (click)=\"backClicked()\" class=\"text-black cursor\">Go Back</a>\r\n                </div>\r\n                <!-- <a href=\"#\" class=\"text-small forgot-password text-black\">Forgot Password</a> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- content-wrapper ends -->\r\n  </div>\r\n  <!-- page-body-wrapper ends -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserAuthService } from '../user.auth.service';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  credentialsForm: FormGroup;\r\n  title = \"Login\";\r\n  loading = false;\r\n  constructor(private router: Router, private userAuthService: UserAuthService) { }\r\n  ngOnInit(): void {\r\n    this.userAuthService.autoAuthUser();\r\n    if (this.userAuthService.getUserAuthStatus()) {\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n    this.credentialsForm = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      password: new FormControl(null, [Validators.required])\r\n    });\r\n  }\r\n  onSubmit() {\r\n    this.title = \"Please wait....\";\r\n    if (!this.credentialsForm.valid) {\r\n      this.title = \"Login\"\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.userAuthService.login(this.credentialsForm.value)\r\n      .pipe(finalize(() => {\r\n        this.title = \"Login\";\r\n        this.loading = false;\r\n      }))\r\n      .subscribe(responseData => {\r\n        this.router.navigateByUrl('/');\r\n        this.credentialsForm.reset();\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n  <div class=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n    <div class=\"content-wrapper d-flex align-items-center auth auth-bg-1 theme-one\">\r\n      <div class=\"row w-100\">\r\n        <div class=\"col-lg-4 mx-auto\">\r\n          <div class=\"auto-form-wrapper\">\r\n            <form [formGroup]=\"credentialsForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"form-group\">\r\n                <label class=\"label\">Email</label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\">\r\n                  <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <div *ngIf=\"!credentialsForm.controls.email.valid &&\r\n            credentialsForm.controls.email.dirty\"\r\n            class=\"validator-error\">\r\n        <p>Enter a valid Email</p>\r\n        </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label class=\"label\">Password</label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"password\" class=\"form-control\" placeholder=\"*********\" formControlName=\"password\">\r\n                  <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <div *ngIf=\"!credentialsForm.controls.password.valid &&\r\n            credentialsForm.controls.password.dirty\"\r\n            class=\"validator-error\">\r\n        <p>Enter a valid password</p>\r\n        </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button [disabled]=\"!credentialsForm.valid\" class=\"btn btn-primary submit-btn btn-block\" [class.spinner]=\"loading\" [disabled]=\"loading\" type=\"submit\">{{ title }}</button>\r\n              </div>\r\n              <div class=\"form-group d-flex justify-content-between\"> \r\n                <div class=\"form-check form-check-flat mt-0\">\r\n                  <a routerLink=\"/forgot-password\" class=\"text-black\">Forgot Password</a>\r\n                </div>\r\n                <!-- <a href=\"#\" class=\"text-small forgot-password text-black\">Forgot Password</a> -->\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- content-wrapper ends -->\r\n  </div>\r\n  <!-- page-body-wrapper ends -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { UserAuthService } from '../../user.auth.service';\r\nimport { User } from 'src/app/shared/users.model';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  title = \"Submit\";\r\n  token : string;\r\n  userId : string;\r\n  loading = false;\r\n  message : string;\r\n  credentialsForm : FormGroup;\r\n  constructor(\r\n    private route : ActivatedRoute,\r\n    private userAuthService : UserAuthService,\r\n    private router : Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n    this.loading =true\r\n    this.route.params.subscribe(\r\n      (params : Params) => {\r\n        if(params['token']) {\r\n          this.token = params['token'];\r\n          this.userAuthService.getResetPassword(this.token)\r\n          .subscribe(responseData => {\r\n            this.loading = false;\r\n            this.userId= responseData.userId;\r\n          }, error => {\r\n            this.router.navigateByUrl('/');\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private init() {\r\n    this.credentialsForm = new FormGroup({\r\n      password : new FormControl(null, [Validators.required, Validators.minLength(8)]),\r\n      confirmpassword : new FormControl(null, [Validators.required])\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if(!this.credentialsForm.valid) {\r\n      return;\r\n    }\r\n    if(this.credentialsForm.value.password !== this.credentialsForm.value.confirmpassword) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    const password = this.credentialsForm.value.password;\r\n    const confirmpassword = this.credentialsForm.value.confirmpassword;\r\n    this.userAuthService.postResetPassword(password, confirmpassword, this.token, this.userId)\r\n    .subscribe(responseData => {\r\n      this.message = responseData.message;\r\n      this.loading = false;\r\n      this.router.navigateByUrl('/login');\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n    <div class=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n        <div class=\"content-wrapper d-flex align-items-center auth auth-bg-1 theme-one\">\r\n            <div class=\"row w-100\">\r\n                <div class=\"col-lg-4 mx-auto\">\r\n                    <div class=\"auto-form-wrapper\">\r\n                        <form [formGroup]=\"credentialsForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\">Password</label>\r\n                                <div class=\"input-group\">\r\n                                    <input type=\"password\" class=\"form-control\" placeholder=\"*********\"\r\n                                        formControlName=\"password\">\r\n                                    <div class=\"input-group-append\">\r\n                                        <span class=\"input-group-text\">\r\n                                            <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div *ngIf=\"!credentialsForm.controls.password.valid &&\r\n              credentialsForm.controls.password.dirty\" class=\"validator-error\">\r\n                                        <p>Enter a valid password</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\"> Confirm Password</label>\r\n                                <div class=\"input-group\">\r\n                                    <input type=\"password\" class=\"form-control\" placeholder=\"*********\"\r\n                                        formControlName=\"confirmpassword\">\r\n                                    <div class=\"input-group-append\">\r\n                                        <span class=\"input-group-text\">\r\n                                            <i class=\"mdi mdi-check-circle-outline\"></i>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div *ngIf=\"!credentialsForm.controls.confirmpassword.valid &&\r\n              credentialsForm.controls.confirmpassword.dirty\" class=\"validator-error\">\r\n                                        <p>Password does not match</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <button [disabled]=\"!credentialsForm.valid\" class=\"btn btn-primary submit-btn btn-block\"\r\n                                    [class.spinner]=\"loading\"  type=\"submit\">{{ title }}</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- content-wrapper ends -->\r\n    </div>\r\n    <!-- page-body-wrapper ends -->\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserAuthService } from './user.auth.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserAuthGuard implements CanActivate {\r\n  constructor(private userAuthService: UserAuthService, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.userAuthService.getUserAuthStatus();\r\n    if (!isAuth) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { Auth } from './auth.model';\r\nimport { User } from '../shared/users.model';\r\nimport { tap } from 'rxjs/operators';\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserAuthService {\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private isAuthenticated: boolean = false;\r\n  private username: string;\r\n  private userimage: string\r\n  private userData = new BehaviorSubject<User>(null);\r\n  private authStatusListener = new BehaviorSubject<boolean>(false);\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  getUserDataStatus() {\r\n    return this.userData.asObservable();\r\n  }\r\n  getUserData() {\r\n    this.http.get<{ user: User }>(BACKEND_URL + 'user/profile')\r\n      .subscribe(responseData => {\r\n        this.userData.next(responseData.user);\r\n      });\r\n  }\r\n  \r\n  login(user: Auth) {\r\n    return this.http.post<{ token: any, expiresIn: number, user: User }>(BACKEND_URL + 'user/login', user)\r\n      .pipe(tap(responseData => this.onHandleAuthentication(responseData)));\r\n  }\r\n\r\n  private onHandleAuthentication(responseData: { token: any, expiresIn: number, user: User }) {\r\n    const token = responseData.token;\r\n    if (token) {\r\n      this.token = token;\r\n      const expiresIn = responseData.expiresIn;\r\n      this.setTimer(expiresIn);\r\n      this.isAuthenticated = true;\r\n      this.authStatusListener.next(true);\r\n      const dateNow = new Date();\r\n      const expirationDate = new Date(dateNow.getTime() + expiresIn * 1000);\r\n      this.saveAuthData(token, expirationDate);\r\n      this.userData.next(responseData.user);\r\n    }\r\n  }\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n  getUserAuthStatus() {\r\n    return this.isAuthenticated;\r\n  }\r\n  private setTimer(expiresIn) {\r\n    console.log('Setting Timer: ' + expiresIn);\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, expiresIn * 1000);\r\n  }\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  // Auto Login\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const currentDateStamp = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - currentDateStamp.getTime();\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.authStatusListener.next(true);\r\n      this.setTimer(expiresIn / 1000)\r\n    }\r\n  }\r\n\r\n  private saveAuthData(token: string, expiresIn: Date) {\r\n    localStorage.setItem('userToken', token);\r\n    localStorage.setItem('userExpiresIn', expiresIn.toISOString());\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem('userToken');\r\n    localStorage.removeItem('userExpiresIn');\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem('userToken');\r\n    const expiresIn = localStorage.getItem('userExpiresIn');\r\n\r\n    if (!token || !expiresIn) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expirationDate: new Date(expiresIn)\r\n    }\r\n  }\r\n\r\n  forgotPassword(email: string) {\r\n    const postData = {\r\n      email: email\r\n    }\r\n    return this.http.post<{ message: string }>(BACKEND_URL + 'user/reset', postData);\r\n  }\r\n\r\n  getResetPassword(token: string) {\r\n    return this.http.get<{ resetToken: string, userId: string }>(BACKEND_URL + 'user/reset/' + token);\r\n  }\r\n\r\n  postResetPassword(password: string, confirmpassword: string, token: string, userId: string) {\r\n    const postData = {\r\n      password: password,\r\n      token: token,\r\n      userId: userId\r\n    }\r\n    return this.http.post<{ message: string }>(BACKEND_URL + 'user/reset/' + token, postData);\r\n  }\r\n\r\n  getProfile() {\r\n    return this.http.get<{ user: User }>(BACKEND_URL + 'user/profile');\r\n  }\r\n\r\n  changeProfile(password: string, newpassword: string, confirmpassword: string) {\r\n    const postData = {\r\n      password: password,\r\n      newpassword: newpassword,\r\n      confirmpassword: confirmpassword\r\n    }\r\n    return this.http.post<{ message: string }>(BACKEND_URL + 'user/profile', postData);\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card-back',\r\n  templateUrl: './card-back.component.html',\r\n  styleUrls: ['./card-back.component.css']\r\n})\r\nexport class CardBackComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"credit-card-wrap\">\r\n<div class=\"mk-icon-world-map\"></div>\r\n\t<div class=\"credit-card-inner\">\r\n\t  <div class=\"credit-font\">\r\n\t    <p>This identity card is not transferable. It must be produced at any time if requested by any officer of the company or authorised person(s)</p>\r\n\t  </div>\r\n\t</div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.css']\r\n})\r\nexport class CardComponent implements OnInit {\r\n\r\n @Input() data;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"credit-card-wrap\">\r\n  <div class=\"mk-icon-world-map\"></div>\r\n  <div class=\"credit-card-inner\">\r\n    <header class=\"header\">\r\n      <div class=\"credit-logo\">\r\n        <div class=\"shape\"><span class=\"txt\">NP</span></div> <span class=\"text\">NUPENG</span>\r\n      </div>\r\n    </header>\r\n    <div class=\"mk-icon-sim\"><img [src]=\"data?.image\" style=\"width: 80px;\r\n    height: 80px;\r\n    border-radius: 50%;\"></div>\r\n    <div class=\"credit-font credit-card-number\">{{ data?.firstname }} {{data?.middlename.charAt(0)}}. {{data?.lastname}}</div>\r\n    <footer class=\"foot\">\r\n      <div class=\"clearfix\">\r\n        <!-- <div class=\"pull-left\">\r\n          <div class=\"credit-card-date\"><span class=\"title\">Gender</span><span class=\"credit-font\">{{ data?.gender }}</span></div>\r\n        </div> -->\r\n        <div class=\"pull-left\">\r\n          <div class=\"credit-font credit-author\">{{ data?.uniqueId | uppercase }}</div>\r\n        </div>\r\n        <div class=\"pull-right credit-author credit-card-date\">{{ data?.gender }}</div>\r\n      </div>\r\n    </footer>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>dashboard works!</p>\r\n","\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n// import { MatDialog } from '@angular/material';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptorService implements HttpInterceptor {\r\n    constructor(private dialog : MatDialog) {}\r\n    intercept(req : HttpRequest<any>, next: HttpHandler) {\r\n        \r\n        return next.handle(req).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                let errorMessage = \"Sorry, we couldn't complete your request. Please try again in a moment.\";\r\n                if(error.error.message){\r\n                    errorMessage = error.error.message;\r\n                }\r\n                // window.alert(errorMessage);\r\n                this.dialog.open(ErrorComponent, {data : {message: errorMessage}});\r\n                return throwError(error);\r\n            })\r\n        );\r\n    }\r\n}","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  message = \"Sorry, we couldn't complete your request. Please try again in a moment.\";\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string }) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Error</h1>\r\n<div mat-dialog-content>\r\n    <p mat-body-1>{{ data.message }}</p>\r\n</div>\r\n<div mat-dialog-actions >\r\n    <button mat-button [mat-dialog-close]>Okay!</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer\">\r\n\t<div class=\"container-fluid clearfix\">\r\n\t  <span class=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © 2020. All rights reserved.</span>\r\n\t  <span class=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i class=\"mdi mdi-heart text-danger\"></i>\r\n\t  </span>\r\n\t</div>\r\n</footer>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar default-layout col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n    <div class=\"text-center navbar-brand-wrapper d-flex align-items-top justify-content-center\">\r\n      <a class=\"navbar-brand brand-logo\" href=\"index.html\">\r\n        Card System </a>\r\n      <a class=\"navbar-brand brand-logo-mini\" href=\"index.html\">\r\n        Card System </a>\r\n    </div>\r\n    <div class=\"navbar-menu-wrapper d-flex align-items-center\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item dropdown d-none d-xl-inline-block user-dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" id=\"UserDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            <img class=\"img-xs rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"Profile image\"> </a>\r\n          <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\">\r\n            <div class=\"dropdown-header text-center\">\r\n              <img class=\"img-md rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"Profile image\">\r\n              <p class=\"mb-1 mt-3 font-weight-semibold\">Azeez Oje</p>\r\n              <p class=\"font-weight-light text-muted mb-0\">User</p>\r\n            </div>\r\n            <a class=\"dropdown-item\" href=\"profile.html\">My Profile <i class=\"dropdown-item-icon ti-dashboard\"></i></a>\r\n            <a class=\"dropdown-item\" href=\"../index.html\">Sign Out<i class=\"dropdown-item-icon ti-power-off\"></i></a>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n        <span class=\"mdi mdi-menu\"></span>\r\n      </button>\r\n    </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { UserAuthService } from '../auth/user.auth.service';\r\nimport { User } from '../shared/users.model';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  user: User;\r\n  userInformation: User;\r\n  constructor(private userAuthService: UserAuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userAuthService.getProfile()\r\n      .subscribe(responseData => {\r\n        this.user = responseData.user;\r\n      });\r\n    this.userAuthService.getUserDataStatus()\r\n      .subscribe(responseData => {\r\n        this.userInformation = responseData;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    this.userAuthService.logout()\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-scroller\">\r\n      <!-- partial:partials/_navbar.html -->\r\n      <nav class=\"navbar default-layout col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n        <div class=\"text-center navbar-brand-wrapper d-flex align-items-top justify-content-center\">\r\n          <a class=\"navbar-brand brand-logo\" href=\"index.html\">\r\n            Card System </a>\r\n          <a class=\"navbar-brand brand-logo-mini\" href=\"index.html\">\r\n            Card System </a>\r\n        </div>\r\n        <div class=\"navbar-menu-wrapper d-flex align-items-center\">\r\n          <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item dropdown d-none d-xl-inline-block user-dropdown\">\r\n              <a class=\"nav-link dropdown-toggle\" id=\"UserDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <img class=\"img-xs rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"Profile image\"> </a>\r\n              <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\">\r\n                <div class=\"dropdown-header text-center\">\r\n                  <img class=\"img-md rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"Profile image\">\r\n                  <p class=\"mb-1 mt-3 font-weight-semibold\">{{userInformation?.firstname}} {{userInformation?.middlename}}</p>\r\n                  <p class=\"font-weight-light text-muted mb-0\">User</p>\r\n                </div>\r\n                <a class=\"dropdown-item\" routerLink=\"/profile\">My Profile <i class=\"dropdown-item-icon ti-dashboard\"></i></a>\r\n                <a class=\"dropdown-item\" style=\"cursor: pointer;\" (click) = \"logout()\">Sign Out<i class=\"dropdown-item-icon ti-power-off\"></i></a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n            <span class=\"mdi mdi-menu\"></span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <!-- partial -->\r\n      <div class=\"container-fluid page-body-wrapper\">\r\n        <!-- partial:partials/_sidebar.html -->\r\n        <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n          <ul class=\"nav\">\r\n            <li class=\"nav-item nav-profile\">\r\n              <a href=\"#\" class=\"nav-link\">\r\n                <div class=\"profile-image\">\r\n                  <img class=\"img-xs rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"profile image\">\r\n                  <div class=\"dot-indicator bg-success\"></div>\r\n                </div>\r\n                <div class=\"text-wrapper\">\r\n                  <p class=\"profile-name\">{{userInformation?.firstname}} {{userInformation?.middlename}}</p>\r\n                  <p class=\"designation\">User</p>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item nav-category\">Main Menu</li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" routerLink=\"/home\">\r\n                <i class=\"menu-icon typcn typcn-document-text\"></i>\r\n                <span class=\"menu-title\">Dashboard</span>\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/profile\">\r\n                <i class=\"menu-icon typcn typcn-bell\"></i>\r\n                <span class=\"menu-title\">Profile</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <!-- partial -->\r\n        <div class=\"main-panel\">\r\n          <div class=\"content-wrapper\">\r\n            <!-- Page Title Header Starts-->\r\n            <div class=\"row page-title-header\">\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-12 col-md-6\">\r\n                <div class=\"row\">\r\n                  <app-card [data]=\"user\"></app-card>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-12 col-md-6\">\r\n                <div class=\"row\">\r\n                  <app-card-back></app-card-back>                                    \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- content-wrapper ends -->\r\n          <!-- partial:partials/_footer.html -->\r\n          <footer class=\"footer\">\r\n            <div class=\"container-fluid clearfix\">\r\n              <span class=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © 2020. All rights reserved.</span>\r\n              <span class=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i class=\"mdi mdi-heart text-danger\"></i>\r\n              </span>\r\n            </div>\r\n          </footer>\r\n          <!-- partial -->\r\n        </div>\r\n        <!-- main-panel ends -->\r\n      </div>\r\n      <!-- page-body-wrapper ends -->\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Agent } from '../shared/agent.model';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { UserAuthService } from '../auth/user.auth.service';\r\nimport { User } from '../shared/users.model';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  userForm : FormGroup;\r\n  loading = false;\r\n  userInformation : User;\r\n  message : string;\r\n  constructor(private userAuthService : UserAuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n    this.userAuthService.getUserDataStatus()\r\n      .subscribe(responseData => {\r\n        this.userInformation = responseData;\r\n      });\r\n  }\r\n\r\n  private init() {\r\n    this.userForm = new FormGroup({\r\n      password : new FormControl(null, [Validators.required]),\r\n      newpassword : new FormControl(null, [Validators.required, Validators.minLength(8)]),\r\n      confirmpassword : new FormControl(null, [Validators.required, Validators.minLength(8)])\r\n    })\r\n  }\r\n\r\n  onSubmit(){\r\n    if(!this.userForm.valid) {\r\n      return;\r\n    }\r\n    if(this.userForm.value.confirmpassword !== this.userForm.value.newpassword) {\r\n      this.message = \"No match\";\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.message = null;\r\n    const password = this.userForm.value.password;\r\n    const newpassword = this.userForm.value.newpassword;\r\n    const confirmpassword = this.userForm.value.confirmpassword;\r\n    this.userAuthService.changeProfile(password, newpassword, confirmpassword)\r\n    .subscribe(responseData => {\r\n      this.userForm.setValue({\r\n        'password' : null,\r\n        'newpassword' : null,\r\n        'confirmpassword' : null\r\n      });\r\n      this.loading = false;\r\n    }, error =>  {\r\n      this.loading = false;\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-scroller\">\r\n  <!-- partial:partials/_navbar.html -->\r\n  <nav class=\"navbar default-layout col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n    <div class=\"text-center navbar-brand-wrapper d-flex align-items-top justify-content-center\">\r\n      <a class=\"navbar-brand brand-logo\" href=\"index.html\">\r\n        Card System </a>\r\n      <a class=\"navbar-brand brand-logo-mini\" href=\"index.html\">\r\n        Card System </a>\r\n    </div>\r\n    <div class=\"navbar-menu-wrapper d-flex align-items-center\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item dropdown d-none d-xl-inline-block user-dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" id=\"UserDropdown\" href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            <img class=\"img-xs rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"Profile image\"> </a>\r\n          <div class=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\">\r\n            <div class=\"dropdown-header text-center\">\r\n              <img class=\"img-md rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"Profile image\">\r\n              <p class=\"mb-1 mt-3 font-weight-semibold\">{{userInformation?.firstname}} {{userInformation?.middlename}}</p>\r\n              <p class=\"font-weight-light text-muted mb-0\">User</p>\r\n            </div>\r\n            <a class=\"dropdown-item\" routerLink=\"/profile\">My Profile <i\r\n                class=\"dropdown-item-icon ti-dashboard\"></i></a>\r\n            <a class=\"dropdown-item\" routerLink=\"/login\">Sign Out<i class=\"dropdown-item-icon ti-power-off\"></i></a>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\"\r\n        data-toggle=\"offcanvas\">\r\n        <span class=\"mdi mdi-menu\"></span>\r\n      </button>\r\n    </div>\r\n  </nav>\r\n  <!-- partial -->\r\n  <div class=\"container-fluid page-body-wrapper\">\r\n    <!-- partial:partials/_sidebar.html -->\r\n    <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n      <ul class=\"nav\">\r\n        <li class=\"nav-item nav-profile\">\r\n          <a href=\"#\" class=\"nav-link\">\r\n            <div class=\"profile-image\">\r\n              <img class=\"img-xs rounded-circle\" src=\"{{userInformation?.image}}\" alt=\"profile image\">\r\n              <div class=\"dot-indicator bg-success\"></div>\r\n            </div>\r\n            <div class=\"text-wrapper\">\r\n              <p class=\"profile-name\">{{userInformation?.firstname}} {{userInformation?.middlename}}</p>\r\n              <p class=\"designation\">User</p>\r\n            </div>\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item nav-category\">Main Menu</li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/home\">\r\n            <i class=\"menu-icon typcn typcn-document-text\"></i>\r\n            <span class=\"menu-title\">Dashboard</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" routerLink=\"/profile\">\r\n            <i class=\"menu-icon typcn typcn-bell\"></i>\r\n            <span class=\"menu-title\">Profile</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <!-- partial -->\r\n    <div class=\"main-panel\">\r\n      <div class=\"content-wrapper\">\r\n        <!-- Page Title Header Starts-->\r\n        <div class=\"row page-title-header\">\r\n        </div>\r\n        <div class=\"row\">\r\n\r\n\r\n\r\n          <div class=\"col-md-12\">\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <h4 class=\"card-title\">Profile</h4>\r\n                <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\" class=\"forms-sample\">\r\n\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleInputPassword4\">Password</label>\r\n                    <input formControlName=\"password\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword4\"\r\n                      placeholder=\"Password\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleInputPassword4\">New Password</label>\r\n                    <input formControlName=\"newpassword\" type=\"password\" class=\"form-control\"\r\n                      id=\"exampleInputNewPassword4\" placeholder=\"New Password\">\r\n                      <mat-error *ngIf=\"message\">{{message}}</mat-error>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <label for=\"exampleInputPassword4\">Confirm Password</label>\r\n                    <input formControlName=\"confirmpassword\" type=\"password\" class=\"form-control\"\r\n                      id=\"exampleInputConfirmPassword4\" placeholder=\"Confirm Password\">\r\n                  </div>\r\n                  <button type=\"submit\" class=\"btn btn-success mr-2\" [class.spinner]=\"loading\" [disabled]=\"loading\">Save Changes</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- content-wrapper ends -->\r\n      <!-- partial:partials/_footer.html -->\r\n      <footer class=\"footer\">\r\n        <div class=\"container-fluid clearfix\">\r\n          <span class=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © 2020. All rights\r\n            reserved.</span>\r\n          <span class=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with <i\r\n              class=\"mdi mdi-heart text-danger\"></i>\r\n          </span>\r\n        </div>\r\n      </footer>\r\n      <!-- partial -->\r\n    </div>\r\n    <!-- main-panel ends -->\r\n  </div>\r\n  <!-- page-body-wrapper ends -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  templateUrl: './loading-spinner.component.html',\r\n  styleUrls: ['./loading-spinner.component.css']\r\n})\r\nexport class LoadingSpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n      <ul class=\"nav\">\r\n        <li class=\"nav-item nav-profile\">\r\n          <a href=\"#\" class=\"nav-link\">\r\n            <div class=\"profile-image\">\r\n              <img class=\"img-xs rounded-circle\" src=\"../assets/images/faces/face8.jpg\" alt=\"profile image\">\r\n              <div class=\"dot-indicator bg-success\"></div>\r\n            </div>\r\n            <div class=\"text-wrapper\">\r\n              <p class=\"profile-name\">Azeez Oje</p>\r\n              <p class=\"designation\">User</p>\r\n            </div>\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item nav-category\">Main Menu</li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"index.html\">\r\n            <i class=\"menu-icon typcn typcn-document-text\"></i>\r\n            <span class=\"menu-title\">Dashboard</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"profile.html\">\r\n            <i class=\"menu-icon typcn typcn-bell\"></i>\r\n            <span class=\"menu-title\">Profile</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>user works!</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // apiUrl: 'http://localhost:3000/api/'\r\n  apiUrl: 'https://digicapture.herokuapp.com/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}